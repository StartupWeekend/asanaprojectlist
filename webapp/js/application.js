/*
 AngularJS v1.3.0-beta.17
 (c) 2010-2014 Google, Inc. http://angularjs.org
 License: MIT
*/
(function(P,V,s){'use strict';function S(b){return function(){var a=arguments[0],c,a="["+(b?b+":":"")+a+"] http://errors.angularjs.org/1.3.0-beta.17/"+(b?b+"/":"")+a;for(c=1;c<arguments.length;c++)a=a+(1==c?"?":"&")+"p"+(c-1)+"="+encodeURIComponent("function"==typeof arguments[c]?arguments[c].toString().replace(/ \{[\s\S]*$/,""):"undefined"==typeof arguments[c]?"undefined":"string"!=typeof arguments[c]?JSON.stringify(arguments[c]):arguments[c]);return Error(a)}}function eb(b){if(null==b||Oa(b))return!1;
var a=b.length;return 1===b.nodeType&&a?!0:G(b)||L(b)||0===a||"number"===typeof a&&0<a&&a-1 in b}function q(b,a,c){var d,e;if(b)if(H(b))for(d in b)"prototype"==d||("length"==d||"name"==d||b.hasOwnProperty&&!b.hasOwnProperty(d))||a.call(c,b[d],d);else if(L(b)||eb(b))for(d=0,e=b.length;d<e;d++)a.call(c,b[d],d);else if(b.forEach&&b.forEach!==q)b.forEach(a,c);else for(d in b)b.hasOwnProperty(d)&&a.call(c,b[d],d);return b}function bc(b){var a=[],c;for(c in b)b.hasOwnProperty(c)&&a.push(c);return a.sort()}
function id(b,a,c){for(var d=bc(b),e=0;e<d.length;e++)a.call(c,b[d[e]],d[e]);return d}function cc(b){return function(a,c){b(c,a)}}function jd(){return++fb}function dc(b,a){a?b.$$hashKey=a:delete b.$$hashKey}function C(b){var a=b.$$hashKey;q(arguments,function(a){a!==b&&q(a,function(a,c){b[c]=a})});dc(b,a);return b}function Y(b){return parseInt(b,10)}function ec(b,a){return C(new (C(function(){},{prototype:b})),a)}function A(){}function Aa(b){return b}function ba(b){return function(){return b}}function F(b){return"undefined"===
typeof b}function D(b){return"undefined"!==typeof b}function R(b){return null!=b&&"object"===typeof b}function G(b){return"string"===typeof b}function Ba(b){return"number"===typeof b}function da(b){return"[object Date]"===xa.call(b)}function H(b){return"function"===typeof b}function gb(b){return"[object RegExp]"===xa.call(b)}function Oa(b){return b&&b.window===b}function kd(b){return!(!b||!(b.nodeName||b.prop&&b.attr&&b.find))}function ld(b){var a={};b=b.split(",");var c;for(c=0;c<b.length;c++)a[b[c]]=
!0;return a}function md(b,a,c){var d=[];q(b,function(b,f,h){d.push(a.call(c,b,f,h))});return d}function Pa(b,a){if(b.indexOf)return b.indexOf(a);for(var c=0;c<b.length;c++)if(a===b[c])return c;return-1}function Ca(b,a){var c=Pa(b,a);0<=c&&b.splice(c,1);return a}function Da(b,a,c,d){if(Oa(b)||b&&b.$evalAsync&&b.$watch)throw Qa("cpws");if(a){if(b===a)throw Qa("cpi");c=c||[];d=d||[];if(R(b)){var e=Pa(c,b);if(-1!==e)return d[e];c.push(b);d.push(a)}if(L(b))for(var f=a.length=0;f<b.length;f++)e=Da(b[f],
null,c,d),R(b[f])&&(c.push(b[f]),d.push(e)),a.push(e);else{var h=a.$$hashKey;q(a,function(b,c){delete a[c]});for(f in b)b.hasOwnProperty(f)&&(e=Da(b[f],null,c,d),R(b[f])&&(c.push(b[f]),d.push(e)),a[f]=e);dc(a,h)}}else if(a=b)L(b)?a=Da(b,[],c,d):da(b)?a=new Date(b.getTime()):gb(b)?(a=RegExp(b.source,b.toString().match(/[^\/]*$/)[0]),a.lastIndex=b.lastIndex):R(b)&&(e=Object.create(Object.getPrototypeOf(b)),a=Da(b,e,c,d));return a}function ha(b,a){var c=0;if(L(b))for(a=a||[];c<b.length;c++)a[c]=b[c];
else if(R(b)){a=a||{};for(var d=Object.keys(b),e=d.length;c<e;c++){var f=d[c];if("$"!==f.charAt(0)||"$"!==f.charAt(1))a[f]=b[f]}}return a||b}function ra(b,a){if(b===a)return!0;if(null===b||null===a)return!1;if(b!==b&&a!==a)return!0;var c=typeof b,d;if(c==typeof a&&"object"==c)if(L(b)){if(!L(a))return!1;if((c=b.length)==a.length){for(d=0;d<c;d++)if(!ra(b[d],a[d]))return!1;return!0}}else{if(da(b))return da(a)&&b.getTime()==a.getTime();if(gb(b)&&gb(a))return b.toString()==a.toString();if(b&&b.$evalAsync&&
b.$watch||a&&a.$evalAsync&&a.$watch||Oa(b)||Oa(a)||L(a))return!1;c={};for(d in b)if("$"!==d.charAt(0)&&!H(b[d])){if(!ra(b[d],a[d]))return!1;c[d]=!0}for(d in a)if(!c.hasOwnProperty(d)&&"$"!==d.charAt(0)&&a[d]!==s&&!H(a[d]))return!1;return!0}return!1}function Eb(b,a){var c=2<arguments.length?la.call(arguments,2):[];return!H(a)||a instanceof RegExp?a:c.length?function(){return arguments.length?a.apply(b,c.concat(la.call(arguments,0))):a.apply(b,c)}:function(){return arguments.length?a.apply(b,arguments):
a.call(b)}}function nd(b,a){var c=a;"string"===typeof b&&"$"===b.charAt(0)&&"$"===b.charAt(1)?c=s:Oa(a)?c="$WINDOW":a&&V===a?c="$DOCUMENT":a&&(a.$evalAsync&&a.$watch)&&(c="$SCOPE");return c}function sa(b,a){return"undefined"===typeof b?s:JSON.stringify(b,nd,a?"  ":null)}function fc(b){return G(b)?JSON.parse(b):b}function ia(b){b=B(b).clone();try{b.empty()}catch(a){}var c=B("<div>").append(b).html();try{return 3===b[0].nodeType?O(c):c.match(/^(<[^>]+>)/)[1].replace(/^<([\w\-]+)/,function(a,b){return"<"+
O(b)})}catch(d){return O(c)}}function gc(b){try{return decodeURIComponent(b)}catch(a){}}function hc(b){var a={},c,d;q((b||"").split("&"),function(b){b&&(c=b.replace(/\+/g,"%20").split("="),d=gc(c[0]),D(d)&&(b=D(c[1])?gc(c[1]):!0,Fb.call(a,d)?L(a[d])?a[d].push(b):a[d]=[a[d],b]:a[d]=b))});return a}function Gb(b){var a=[];q(b,function(b,d){L(b)?q(b,function(b){a.push(ya(d,!0)+(!0===b?"":"="+ya(b,!0)))}):a.push(ya(d,!0)+(!0===b?"":"="+ya(b,!0)))});return a.length?a.join("&"):""}function hb(b){return ya(b,
!0).replace(/%26/gi,"&").replace(/%3D/gi,"=").replace(/%2B/gi,"+")}function ya(b,a){return encodeURIComponent(b).replace(/%40/gi,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,a?"%20":"+")}function od(b,a){var c,d,e=ib.length;b=B(b);for(d=0;d<e;++d)if(c=ib[d]+a,G(c=b.attr(c)))return c;return null}function pd(b,a){var c,d,e={};q(ib,function(a){a+="app";!c&&(b.hasAttribute&&b.hasAttribute(a))&&(c=b,d=b.getAttribute(a))});q(ib,function(a){a+="app";var e;!c&&(e=b.querySelector("["+
a.replace(":","\\:")+"]"))&&(c=e,d=e.getAttribute(a))});c&&(e.strictDi=null!==od(c,"strict-di"),a(c,d?[d]:[],e))}function ic(b,a,c){R(c)||(c={});c=C({strictDi:!1},c);var d=function(){b=B(b);if(b.injector()){var d=b[0]===V?"document":ia(b);throw Qa("btstrpd",d);}a=a||[];a.unshift(["$provide",function(a){a.value("$rootElement",b)}]);a.unshift("ng");d=Hb(a,c.strictDi);d.invoke(["$rootScope","$rootElement","$compile","$injector",function(a,b,c,d){a.$apply(function(){b.data("$injector",d);c(b)(a)})}]);
return d},e=/^NG_DEFER_BOOTSTRAP!/;if(P&&!e.test(P.name))return d();P.name=P.name.replace(e,"");Ra.resumeBootstrap=function(b){q(b,function(b){a.push(b)});d()}}function jb(b,a){a=a||"_";return b.replace(qd,function(b,d){return(d?a:"")+b.toLowerCase()})}function rd(){var b;(ta=P.jQuery)&&ta.fn.on?(B=ta,C(ta.fn,{scope:Ea.scope,isolateScope:Ea.isolateScope,controller:Ea.controller,injector:Ea.injector,inheritedData:Ea.inheritedData}),b=ta.cleanData,b=b.$$original||b,ta.cleanData=function(a){for(var c=
0,d;null!=(d=a[c]);c++)ta(d).triggerHandler("$destroy");b(a)},ta.cleanData.$$original=b):B=Q;Ra.element=B}function Ib(b,a,c){if(!b)throw Qa("areq",a||"?",c||"required");return b}function Sa(b,a,c){c&&L(b)&&(b=b[b.length-1]);Ib(H(b),a,"not a function, got "+(b&&"object"===typeof b?b.constructor.name||"Object":typeof b));return b}function za(b,a){if("hasOwnProperty"===b)throw Qa("badname",a);}function jc(b,a,c){if(!a)return b;a=a.split(".");for(var d,e=b,f=a.length,h=0;h<f;h++)d=a[h],b&&(b=(e=b)[d]);
return!c&&H(b)?Eb(e,b):b}function kb(b){var a=b[0];b=b[b.length-1];if(a===b)return B(a);var c=[a];do{a=a.nextSibling;if(!a)break;c.push(a)}while(a!==b);return B(c)}function sd(b){var a=S("$injector"),c=S("ng");b=b.angular||(b.angular={});b.$$minErr=b.$$minErr||S;return b.module||(b.module=function(){var b={};return function(e,f,h){if("hasOwnProperty"===e)throw c("badname","module");f&&b.hasOwnProperty(e)&&(b[e]=null);return b[e]||(b[e]=function(){function b(a,d,e,f){f||(f=c);return function(){f[e||
"push"]([a,d,arguments]);return k}}if(!f)throw a("nomod",e);var c=[],d=[],n=[],p=b("$injector","invoke","push",d),k={_invokeQueue:c,_configBlocks:d,_runBlocks:n,requires:f,name:e,provider:b("$provide","provider"),factory:b("$provide","factory"),service:b("$provide","service"),value:b("$provide","value"),constant:b("$provide","constant","unshift"),animation:b("$animateProvider","register"),filter:b("$filterProvider","register"),controller:b("$controllerProvider","register"),directive:b("$compileProvider",
"directive"),config:p,run:function(a){n.push(a);return this}};h&&p(h);return k}())}}())}function td(b){C(b,{bootstrap:ic,copy:Da,extend:C,equals:ra,element:B,forEach:q,injector:Hb,noop:A,bind:Eb,toJson:sa,fromJson:fc,identity:Aa,isUndefined:F,isDefined:D,isString:G,isFunction:H,isObject:R,isNumber:Ba,isElement:kd,isArray:L,version:ud,isDate:da,lowercase:O,uppercase:lb,callbacks:{counter:0},$$minErr:S,$$csp:Ta});Ua=sd(P);try{Ua("ngLocale")}catch(a){Ua("ngLocale",[]).provider("$locale",vd)}Ua("ng",
["ngLocale"],["$provide",function(a){a.provider({$$sanitizeUri:wd});a.provider("$compile",kc).directive({a:xd,input:lc,textarea:lc,form:yd,script:zd,select:Ad,style:Bd,option:Cd,ngBind:Dd,ngBindHtml:Ed,ngBindTemplate:Fd,ngClass:Gd,ngClassEven:Hd,ngClassOdd:Id,ngCloak:Jd,ngController:Kd,ngForm:Ld,ngHide:Md,ngIf:Nd,ngInclude:Od,ngInit:Pd,ngNonBindable:Qd,ngPluralize:Rd,ngRepeat:Sd,ngShow:Td,ngStyle:Ud,ngSwitch:Vd,ngSwitchWhen:Wd,ngSwitchDefault:Xd,ngOptions:Yd,ngTransclude:Zd,ngModel:$d,ngList:ae,ngChange:be,
pattern:mc,ngPattern:mc,required:nc,ngRequired:nc,minlength:oc,ngMinlength:oc,maxlength:pc,ngMaxlength:pc,ngValue:ce,ngModelOptions:de}).directive({ngInclude:ee}).directive(mb).directive(qc);a.provider({$anchorScroll:fe,$animate:ge,$browser:he,$cacheFactory:ie,$controller:je,$document:ke,$exceptionHandler:le,$filter:rc,$interpolate:me,$interval:ne,$http:oe,$httpBackend:pe,$location:qe,$log:re,$parse:se,$rootScope:te,$q:ue,$$q:ve,$sce:we,$sceDelegate:xe,$sniffer:ye,$templateCache:ze,$timeout:Ae,$window:Be,
$$rAF:Ce,$$asyncCallback:De})}])}function Va(b){return b.replace(Ee,function(a,b,d,e){return e?d.toUpperCase():d}).replace(Fe,"Moz$1")}function Ge(b,a){var c,d,e=a.createDocumentFragment(),f=[];if(Jb.test(b)){c=c||e.appendChild(a.createElement("div"));d=(He.exec(b)||["",""])[1].toLowerCase();d=ea[d]||ea._default;c.innerHTML=d[1]+b.replace(Ie,"<$1></$2>")+d[2];for(d=d[0];d--;)c=c.lastChild;f=f.concat(la.call(c.childNodes,void 0));c=e.firstChild;c.textContent=""}else f.push(a.createTextNode(b));e.textContent=
"";e.innerHTML="";q(f,function(a){e.appendChild(a)});return e}function Q(b){if(b instanceof Q)return b;G(b)&&(b=$(b));if(!(this instanceof Q)){if(G(b)&&"<"!=b.charAt(0))throw Kb("nosel");return new Q(b)}if(G(b)){var a;a=V;var c;b=(c=Je.exec(b))?[a.createElement(c[1])]:(c=Ge(b,a))?c.childNodes:[]}sc(this,b)}function Lb(b){return b.cloneNode(!0)}function nb(b,a){a||ob(b);if(b.childNodes&&b.childNodes.length)for(var c=b.getElementsByTagName?b.getElementsByTagName("*"):b.querySelectorAll?b.querySelectorAll("*"):
[],d=0,e=c.length;d<e;d++)ob(c[d])}function tc(b,a,c,d){if(D(d))throw Kb("offargs");var e=ma(b,"events");ma(b,"handle")&&(F(a)?q(e,function(a,c){Wa(b,c,a);delete e[c]}):q(a.split(" "),function(a){F(c)?(Wa(b,a,e[a]),delete e[a]):Ca(e[a]||[],c)}))}function ob(b,a){var c=b.ng339,d=Xa[c];d&&(a?delete Xa[c].data[a]:(d.handle&&(d.events.$destroy&&d.handle({},"$destroy"),tc(b)),delete Xa[c],b.ng339=s))}function ma(b,a,c){var d=b.ng339,d=Xa[d||-1];if(D(c))d||(b.ng339=d=++Ke,d=Xa[d]={}),d[a]=c;else return d&&
d[a]}function Mb(b,a,c){if(!b.nodeType||1===b.nodeType||9===b.nodeType){var d=ma(b,"data"),e=D(c),f=!e&&D(a),h=f&&!R(a);d||h||ma(b,"data",d={});if(e)d[a]=c;else if(f){if(h)return d&&d[a];C(d,a)}else return d}}function Nb(b,a){return b.getAttribute?-1<(" "+(b.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ").indexOf(" "+a+" "):!1}function pb(b,a){a&&b.setAttribute&&q(a.split(" "),function(a){b.setAttribute("class",$((" "+(b.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ").replace(" "+$(a)+
" "," ")))})}function qb(b,a){if(a&&b.setAttribute){var c=(" "+(b.getAttribute("class")||"")+" ").replace(/[\n\t]/g," ");q(a.split(" "),function(a){a=$(a);-1===c.indexOf(" "+a+" ")&&(c+=a+" ")});b.setAttribute("class",$(c))}}function sc(b,a){if(a)if(a.nodeType)b[b.length++]=a;else{var c=a.length;"number"===typeof c&&a.window!==a?c&&(a.item&&(a=la.call(a)),uc.apply(b,a)):b[b.length++]=a}}function vc(b,a){return rb(b,"$"+(a||"ngController")+"Controller")}function rb(b,a,c){9==b.nodeType&&(b=b.documentElement);
for(a=L(a)?a:[a];b;){for(var d=0,e=a.length;d<e;d++)if((c=B.data(b,a[d]))!==s)return c;b=b.parentNode||11===b.nodeType&&b.host}}function wc(b){for(nb(b,!0);b.firstChild;)b.removeChild(b.firstChild)}function xc(b,a){var c=sb[a.toLowerCase()];return c&&yc[na(b)]&&c}function Le(b,a){var c=b.nodeName;return("INPUT"===c||"TEXTAREA"===c)&&zc[a]}function Me(b,a){var c=function(c,e){c.preventDefault||(c.preventDefault=function(){c.returnValue=!1});c.stopPropagation||(c.stopPropagation=function(){c.cancelBubble=
!0});c.target||(c.target=c.srcElement||V);if(F(c.defaultPrevented)){var f=c.preventDefault;c.preventDefault=function(){c.defaultPrevented=!0;f.call(c)};c.defaultPrevented=!1}c.isDefaultPrevented=function(){return c.defaultPrevented||!1===c.returnValue};var h=ha(a[e||c.type]||[]);q(h,function(a){a.call(b,c)});8>=T?(c.preventDefault=null,c.stopPropagation=null,c.isDefaultPrevented=null):(delete c.preventDefault,delete c.stopPropagation,delete c.isDefaultPrevented)};c.elem=b;return c}function Fa(b,a){var c=
typeof b,d;"function"==c||"object"==c&&null!==b?"function"==typeof(d=b.$$hashKey)?d=b.$$hashKey():d===s&&(d=b.$$hashKey=(a||jd)()):d=b;return c+":"+d}function Ya(b,a){if(a){var c=0;this.nextUid=function(){return++c}}q(b,this.put,this)}function Ne(b){return(b=b.toString().replace(Ac,"").match(Bc))?"function("+(b[1]||"").replace(/[\s\r\n]+/," ")+")":"fn"}function Ob(b,a,c){var d;if("function"===typeof b){if(!(d=b.$inject)){d=[];if(b.length){if(a)throw G(c)&&c||(c=b.name||Ne(b)),Ga("strictdi",c);a=b.toString().replace(Ac,
"");a=a.match(Bc);q(a[1].split(Oe),function(a){a.replace(Pe,function(a,b,c){d.push(c)})})}b.$inject=d}}else L(b)?(a=b.length-1,Sa(b[a],"fn"),d=b.slice(0,a)):Sa(b,"fn",!0);return d}function Hb(b,a){function c(a){return function(b,c){if(R(b))q(b,cc(a));else return a(b,c)}}function d(a,b){za(a,"service");if(H(b)||L(b))b=k.instantiate(b);if(!b.$get)throw Ga("pget",a);return p[a+m]=b}function e(a,b){return d(a,{$get:b})}function f(a){var b=[],c;q(a,function(a){function d(a){var b,c;b=0;for(c=a.length;b<
c;b++){var e=a[b],f=k.get(e[0]);f[e[1]].apply(f,e[2])}}if(!n.get(a)){n.put(a,!0);try{G(a)?(c=Ua(a),b=b.concat(f(c.requires)).concat(c._runBlocks),d(c._invokeQueue),d(c._configBlocks)):H(a)?b.push(k.invoke(a)):L(a)?b.push(k.invoke(a)):Sa(a,"module")}catch(e){throw L(a)&&(a=a[a.length-1]),e.message&&(e.stack&&-1==e.stack.indexOf(e.message))&&(e=e.message+"\n"+e.stack),Ga("modulerr",a,e.stack||e.message||e);}}});return b}function h(b,c){function d(a){if(b.hasOwnProperty(a)){if(b[a]===g)throw Ga("cdep",
a+" <- "+l.join(" <- "));return b[a]}try{return l.unshift(a),b[a]=g,b[a]=c(a)}catch(e){throw b[a]===g&&delete b[a],e;}finally{l.shift()}}function e(b,c,f,g){"string"===typeof f&&(g=f,f=null);var h=[];g=Ob(b,a,g);var m,l,k;l=0;for(m=g.length;l<m;l++){k=g[l];if("string"!==typeof k)throw Ga("itkn",k);h.push(f&&f.hasOwnProperty(k)?f[k]:d(k))}L(b)&&(b=b[m]);return b.apply(c,h)}return{invoke:e,instantiate:function(a,b,c){var d=function(){};d.prototype=(L(a)?a[a.length-1]:a).prototype;d=new d;a=e(a,d,b,
c);return R(a)||H(a)?a:d},get:d,annotate:Ob,has:function(a){return p.hasOwnProperty(a+m)||b.hasOwnProperty(a)}}}a=!0===a;var g={},m="Provider",l=[],n=new Ya([],!0),p={$provide:{provider:c(d),factory:c(e),service:c(function(a,b){return e(a,["$injector",function(a){return a.instantiate(b)}])}),value:c(function(a,b){return e(a,ba(b))}),constant:c(function(a,b){za(a,"constant");p[a]=b;t[a]=b}),decorator:function(a,b){var c=k.get(a+m),d=c.$get;c.$get=function(){var a=u.invoke(d,c);return u.invoke(b,null,
{$delegate:a})}}}},k=p.$injector=h(p,function(){throw Ga("unpr",l.join(" <- "));},a),t={},u=t.$injector=h(t,function(a){var b=k.get(a+m);return u.invoke(b.$get,b,s,a)},a);q(f(b),function(a){u.invoke(a||A)});return u}function fe(){var b=!0;this.disableAutoScrolling=function(){b=!1};this.$get=["$window","$location","$rootScope",function(a,c,d){function e(a){var b=null;q(a,function(a){b||"a"!==na(a)||(b=a)});return b}function f(){var b=c.hash(),d;b?(d=h.getElementById(b))?d.scrollIntoView():(d=e(h.getElementsByName(b)))?
d.scrollIntoView():"top"===b&&a.scrollTo(0,0):a.scrollTo(0,0)}var h=a.document;b&&d.$watch(function(){return c.hash()},function(){d.$evalAsync(f)});return f}]}function De(){this.$get=["$$rAF","$timeout",function(b,a){return b.supported?function(a){return b(a)}:function(b){return a(b,0,!1)}}]}function Qe(b,a,c,d){function e(a){try{a.apply(null,la.call(arguments,1))}finally{if(u--,0===u)for(;K.length;)try{K.pop()()}catch(b){c.error(b)}}}function f(a,b){(function Ha(){q(w,function(a){a()});y=b(Ha,a)})()}
function h(){r=null;v!=g.url()&&(v=g.url(),q(U,function(a){a(g.url())}))}var g=this,m=a[0],l=b.location,n=b.history,p=b.setTimeout,k=b.clearTimeout,t={};g.isMock=!1;var u=0,K=[];g.$$completeOutstandingRequest=e;g.$$incOutstandingRequestCount=function(){u++};g.notifyWhenNoOutstandingRequests=function(a){q(w,function(a){a()});0===u?a():K.push(a)};var w=[],y;g.addPollFn=function(a){F(y)&&f(100,p);w.push(a);return a};var v=l.href,x=a.find("base"),r=null;g.url=function(a,c){l!==b.location&&(l=b.location);
n!==b.history&&(n=b.history);if(a){if(v!=a)return v=a,d.history?c?n.replaceState(null,"",a):(n.pushState(null,"",a),x.attr("href",x.attr("href"))):(r=a,c?l.replace(a):l.href=a),g}else return r||l.href.replace(/%27/g,"'")};var U=[],N=!1;g.onUrlChange=function(a){if(!N){if(d.history)B(b).on("popstate",h);if(d.hashchange)B(b).on("hashchange",h);else g.addPollFn(h);N=!0}U.push(a);return a};g.baseHref=function(){var a=x.attr("href");return a?a.replace(/^(https?\:)?\/\/[^\/]*/,""):""};var W={},I="",E=g.baseHref();
g.cookies=function(a,b){var d,e,f,g;if(a)b===s?m.cookie=encodeURIComponent(a)+"=;path="+E+";expires=Thu, 01 Jan 1970 00:00:00 GMT":G(b)&&(d=(m.cookie=encodeURIComponent(a)+"="+encodeURIComponent(b)+";path="+E).length+1,4096<d&&c.warn("Cookie '"+a+"' possibly not set or overflowed because it was too large ("+d+" > 4096 bytes)!"));else{if(m.cookie!==I)for(I=m.cookie,d=I.split("; "),W={},f=0;f<d.length;f++)e=d[f],g=e.indexOf("="),0<g&&(a=decodeURIComponent(e.substring(0,g)),W[a]===s&&(W[a]=decodeURIComponent(e.substring(g+
1))));return W}};g.defer=function(a,b){var c;u++;c=p(function(){delete t[c];e(a)},b||0);t[c]=!0;return c};g.defer.cancel=function(a){return t[a]?(delete t[a],k(a),e(A),!0):!1}}function he(){this.$get=["$window","$log","$sniffer","$document",function(b,a,c,d){return new Qe(b,d,a,c)}]}function ie(){this.$get=function(){function b(b,d){function e(a){a!=p&&(k?k==a&&(k=a.n):k=a,f(a.n,a.p),f(a,p),p=a,p.n=null)}function f(a,b){a!=b&&(a&&(a.p=b),b&&(b.n=a))}if(b in a)throw S("$cacheFactory")("iid",b);var h=
0,g=C({},d,{id:b}),m={},l=d&&d.capacity||Number.MAX_VALUE,n={},p=null,k=null;return a[b]={put:function(a,b){if(l<Number.MAX_VALUE){var c=n[a]||(n[a]={key:a});e(c)}if(!F(b))return a in m||h++,m[a]=b,h>l&&this.remove(k.key),b},get:function(a){if(l<Number.MAX_VALUE){var b=n[a];if(!b)return;e(b)}return m[a]},remove:function(a){if(l<Number.MAX_VALUE){var b=n[a];if(!b)return;b==p&&(p=b.p);b==k&&(k=b.n);f(b.n,b.p);delete n[a]}delete m[a];h--},removeAll:function(){m={};h=0;n={};p=k=null},destroy:function(){n=
g=m=null;delete a[b]},info:function(){return C({},g,{size:h})}}}var a={};b.info=function(){var b={};q(a,function(a,e){b[e]=a.info()});return b};b.get=function(b){return a[b]};return b}}function ze(){this.$get=["$cacheFactory",function(b){return b("templates")}]}function kc(b,a){var c={},d="Directive",e=/^\s*directive\:\s*([\d\w_\-]+)\s+(.*)$/,f=/(([\d\w_\-]+)(?:\:([^;]+))?;?)/,h=ld("ngSrc,ngSrcset,src,srcset"),g=/^(on[a-z]+|formaction)$/;this.directive=function l(a,e){za(a,"directive");G(a)?(Ib(e,
"directiveFactory"),c.hasOwnProperty(a)||(c[a]=[],b.factory(a+d,["$injector","$exceptionHandler",function(b,d){var e=[];q(c[a],function(c,f){try{var g=b.invoke(c);H(g)?g={compile:ba(g)}:!g.compile&&g.link&&(g.compile=ba(g.link));g.priority=g.priority||0;g.index=f;g.name=g.name||a;g.require=g.require||g.controller&&g.name;g.restrict=g.restrict||"EA";e.push(g)}catch(h){d(h)}});return e}])),c[a].push(e)):q(a,cc(l));return this};this.aHrefSanitizationWhitelist=function(b){return D(b)?(a.aHrefSanitizationWhitelist(b),
this):a.aHrefSanitizationWhitelist()};this.imgSrcSanitizationWhitelist=function(b){return D(b)?(a.imgSrcSanitizationWhitelist(b),this):a.imgSrcSanitizationWhitelist()};this.$get=["$injector","$interpolate","$exceptionHandler","$http","$templateCache","$parse","$controller","$rootScope","$document","$sce","$animate","$$sanitizeUri",function(a,b,p,k,t,u,K,w,y,v,x,r){function U(a,b,c,d,e){a instanceof B||(a=B(a));q(a,function(b,c){3==b.nodeType&&b.nodeValue.match(/\S+/)&&(a[c]=B(b).wrap("<span></span>").parent()[0])});
var f=W(a,b,a,c,d,e);N(a,"ng-scope");return function(b,c,d,e){Ib(b,"scope");var g=c?Ea.clone.call(a):a;q(d,function(a,b){g.data("$"+b+"Controller",a)});g.data("$scope",b);c&&c(g,b);f&&f(b,g,g,e);return g}}function N(a,b){try{a.addClass(b)}catch(c){}}function W(a,b,c,d,e,f){function g(a,c,d,e){var f,l,k,n,p,t,w;f=c.length;var y=Array(f);for(n=0;n<f;n++)y[n]=c[n];t=n=0;for(p=h.length;n<p;t++)l=y[t],c=h[n++],f=h[n++],c?(c.scope?(k=a.$new(),B.data(l,"$scope",k)):k=a,w=c.transcludeOnThisElement?I(a,c.transclude,
e):!c.templateOnThisElement&&e?e:!e&&b?I(a,b):null,c(f,k,l,d,w)):f&&f(a,l.childNodes,s,e)}for(var h=[],l,k,n,p,t=0;t<a.length;t++)l=new Pb,k=E(a[t],[],l,0===t?d:s,e),(f=k.length?ca(k,a[t],l,b,c,null,[],[],f):null)&&f.scope&&N(l.$$element,"ng-scope"),l=f&&f.terminal||!(n=a[t].childNodes)||!n.length?null:W(n,f?(f.transcludeOnThisElement||!f.templateOnThisElement)&&f.transclude:b),h.push(f,l),p=p||f||l,f=null;return p?g:null}function I(a,b,c){return function(d,e,f){var g=!1;d||(d=a.$new(),g=d.$$transcluded=
!0);e=b(d,e,f,c);if(g)e.on("$destroy",function(){d.$destroy()});return e}}function E(b,g,h,k,n){var t=h.$attr,p;switch(b.nodeType){case 1:D(g,oa(na(b)),"E",k,n);for(var w,y,K,u=b.attributes,x=0,r=u&&u.length;x<r;x++){var v=!1,N=!1;w=u[x];if(!T||8<=T||w.specified){p=w.name;w=$(w.value);y=oa(p);if(K=Ja.test(y))p=jb(y.substr(6),"-");var q=y.replace(/(Start|End)$/,""),I;a:{var z=q;if(c.hasOwnProperty(z)){I=void 0;for(var z=a.get(z+d),X=0,E=z.length;X<E;X++)if(I=z[X],I.multiElement){I=!0;break a}}I=!1}I&&
y===q+"Start"&&(v=p,N=p.substr(0,p.length-5)+"end",p=p.substr(0,p.length-6));y=oa(p.toLowerCase());t[y]=p;if(K||!h.hasOwnProperty(y))h[y]=w,xc(b,y)&&(h[y]=!0);fa(b,g,w,y);D(g,y,"A",k,n,v,N)}}b=b.className;if(G(b)&&""!==b)for(;p=f.exec(b);)y=oa(p[2]),D(g,y,"C",k,n)&&(h[y]=$(p[3])),b=b.substr(p.index+p[0].length);break;case 3:Ka(g,b.nodeValue);break;case 8:try{if(p=e.exec(b.nodeValue))y=oa(p[1]),D(g,y,"M",k,n)&&(h[y]=$(p[2]))}catch(U){}}g.sort(M);return g}function z(a,b,c){var d=[],e=0;if(b&&a.hasAttribute&&
a.hasAttribute(b)){do{if(!a)throw ja("uterdir",b,c);1==a.nodeType&&(a.hasAttribute(b)&&e++,a.hasAttribute(c)&&e--);d.push(a);a=a.nextSibling}while(0<e)}else d.push(a);return B(d)}function X(a,b,c){return function(d,e,f,g,h){e=z(e[0],b,c);return a(d,e,f,g,h)}}function ca(a,c,d,e,f,g,h,l,k){function t(a,b,c,d){if(a){c&&(a=X(a,c,d));a.require=J.require;a.directiveName=fa;if(I===J||J.$$isolateScope)a=Dc(a,{isolateScope:!0});h.push(a)}if(b){c&&(b=X(b,c,d));b.require=J.require;b.directiveName=fa;if(I===
J||J.$$isolateScope)b=Dc(b,{isolateScope:!0});l.push(b)}}function w(a,b,c,d){var e,f="data",g=!1;if(G(b)){for(;"^"==(e=b.charAt(0))||"?"==e;)b=b.substr(1),"^"==e&&(f="inheritedData"),g=g||"?"==e;e=null;d&&"data"===f&&(e=d[b]);e=e||c[f]("$"+b+"Controller");if(!e&&!g)throw ja("ctreq",b,a);}else L(b)&&(e=[],q(b,function(b){e.push(w(a,b,c,d))}));return e}function y(a,e,f,g,k){function t(a,b){var c;2>arguments.length&&(b=a,a=s);Ka&&(c=U);return k(a,b,c)}var x,r,Cc,z,X,E,U={},ca;x=c===f?d:ha(d,new Pb(B(f),
d.$attr));r=x.$$element;if(I){var Ha=/^\s*([@=&])(\??)\s*(\w*)\s*$/;E=e.$new(!0);!W||W!==I&&W!==I.$$originalDirective?r.data("$isolateScopeNoTemplate",E):r.data("$isolateScope",E);N(r,"ng-isolate-scope");q(I.scope,function(a,c){var d=a.match(Ha)||[],f=d[3]||c,g="?"==d[2],d=d[1],h,k,l,p;E.$$isolateBindings[c]=d+f;switch(d){case "@":x.$observe(f,function(a){E[c]=a});x.$$observers[f].$$scope=e;x[f]&&(E[c]=b(x[f])(e));break;case "=":if(g&&!x[f])break;k=u(x[f]);p=k.literal?ra:function(a,b){return a===
b};l=k.assign||function(){h=E[c]=k(e);throw ja("nonassign",x[f],I.name);};h=E[c]=k(e);g=e.$watch(u(x[f],function(a){p(a,E[c])||(p(a,h)?l(e,a=E[c]):E[c]=a);return h=a}),null,k.literal);E.$on("$destroy",g);break;case "&":k=u(x[f]);E[c]=function(a){return k(e,a)};break;default:throw ja("iscp",I.name,c,a);}})}ca=k&&t;v&&q(v,function(a){var b={$scope:a===I||a.$$isolateScope?E:e,$element:r,$attrs:x,$transclude:ca},c;X=a.controller;"@"==X&&(X=x[a.name]);c=K(X,b);U[a.name]=c;Ka||r.data("$"+a.name+"Controller",
c);a.controllerAs&&(b.$scope[a.controllerAs]=c)});g=0;for(Cc=h.length;g<Cc;g++)try{z=h[g],z(z.isolateScope?E:e,r,x,z.require&&w(z.directiveName,z.require,r,U),ca)}catch(D){p(D,ia(r))}g=e;I&&(I.template||null===I.templateUrl)&&(g=E);a&&a(g,f.childNodes,s,k);for(g=l.length-1;0<=g;g--)try{z=l[g],z(z.isolateScope?E:e,r,x,z.require&&w(z.directiveName,z.require,r,U),ca)}catch(Re){p(Re,ia(r))}}k=k||{};for(var x=-Number.MAX_VALUE,r,v=k.controllerDirectives,I=k.newIsolateScopeDirective,W=k.templateDirective,
ca=k.nonTlbTranscludeDirective,D=!1,Za=!1,Ka=k.hasElementTranscludeDirective,C=d.$$element=B(c),J,fa,M,O=e,Q,P=0,Ia=a.length;P<Ia;P++){J=a[P];var Ja=J.$$start,T=J.$$end;Ja&&(C=z(c,Ja,T));M=s;if(x>J.priority)break;if(M=J.scope)J.templateUrl||(R(M)?(La("new/isolated scope",I||r,J,C),I=J):La("new/isolated scope",I,J,C)),r=r||J;fa=J.name;!J.templateUrl&&J.controller&&(M=J.controller,v=v||{},La("'"+fa+"' controller",v[fa],J,C),v[fa]=J);if(M=J.transclude)D=!0,J.$$tlb||(La("transclusion",ca,J,C),ca=J),"element"==
M?(Ka=!0,x=J.priority,M=C,C=d.$$element=B(V.createComment(" "+fa+": "+d[fa]+" ")),c=C[0],tb(f,la.call(M,0),c),O=U(M,e,x,g&&g.name,{nonTlbTranscludeDirective:ca})):(M=B(Lb(c)).contents(),C.empty(),O=U(M,e));if(J.template)if(Za=!0,La("template",W,J,C),W=J,M=H(J.template)?J.template(C,d):J.template,M=Ec(M),J.replace){g=J;M=Jb.test(M)?B(S(J.type,$(M))):[];c=M[0];if(1!=M.length||1!==c.nodeType)throw ja("tplrt",fa,"");tb(f,C,c);Ia={$attr:{}};M=E(c,[],Ia);var Y=a.splice(P+1,a.length-(P+1));I&&Ha(M);a=a.concat(M).concat(Y);
A(d,Ia);Ia=a.length}else C.html(M);if(J.templateUrl)Za=!0,La("template",W,J,C),W=J,J.replace&&(g=J),y=F(a.splice(P,a.length-P),C,d,f,D&&O,h,l,{controllerDirectives:v,newIsolateScopeDirective:I,templateDirective:W,nonTlbTranscludeDirective:ca}),Ia=a.length;else if(J.compile)try{Q=J.compile(C,d,O),H(Q)?t(null,Q,Ja,T):Q&&t(Q.pre,Q.post,Ja,T)}catch(Z){p(Z,ia(C))}J.terminal&&(y.terminal=!0,x=Math.max(x,J.priority))}y.scope=r&&!0===r.scope;y.transcludeOnThisElement=D;y.templateOnThisElement=Za;y.transclude=
O;k.hasElementTranscludeDirective=Ka;return y}function Ha(a){for(var b=0,c=a.length;b<c;b++)a[b]=ec(a[b],{$$isolateScope:!0})}function D(b,e,f,g,h,k,n){if(e===h)return null;h=null;if(c.hasOwnProperty(e)){var t;e=a.get(e+d);for(var y=0,w=e.length;y<w;y++)try{t=e[y],(g===s||g>t.priority)&&-1!=t.restrict.indexOf(f)&&(k&&(t=ec(t,{$$start:k,$$end:n})),b.push(t),h=t)}catch(K){p(K)}}return h}function A(a,b){var c=b.$attr,d=a.$attr,e=a.$$element;q(a,function(d,e){"$"!=e.charAt(0)&&(b[e]&&b[e]!==d&&(d+=("style"===
e?";":" ")+b[e]),a.$set(e,d,!0,c[e]))});q(b,function(b,f){"class"==f?(N(e,b),a["class"]=(a["class"]?a["class"]+" ":"")+b):"style"==f?(e.attr("style",e.attr("style")+";"+b),a.style=(a.style?a.style+";":"")+b):"$"==f.charAt(0)||a.hasOwnProperty(f)||(a[f]=b,d[f]=c[f])})}function F(a,b,c,d,e,f,g,h){var l=[],n,p,y=b[0],w=a.shift(),K=C({},w,{templateUrl:null,transclude:null,replace:null,$$originalDirective:w}),u=H(w.templateUrl)?w.templateUrl(b,c):w.templateUrl,x=w.type;b.empty();k.get(v.getTrustedResourceUrl(u),
{cache:t}).success(function(k){var t,r;k=Ec(k);if(w.replace){k=Jb.test(k)?B(S(x,$(k))):[];t=k[0];if(1!=k.length||1!==t.nodeType)throw ja("tplrt",w.name,u);k={$attr:{}};tb(d,b,t);var v=E(t,[],k);R(w.scope)&&Ha(v);a=v.concat(a);A(c,k)}else t=y,b.html(k);a.unshift(K);n=ca(a,t,c,e,b,w,f,g,h);q(d,function(a,c){a==t&&(d[c]=b[0])});for(p=W(b[0].childNodes,e);l.length;){k=l.shift();r=l.shift();var z=l.shift(),X=l.shift(),v=b[0];if(r!==y){var U=r.className;h.hasElementTranscludeDirective&&w.replace||(v=Lb(t));
tb(z,B(r),v);N(B(v),U)}r=n.transcludeOnThisElement?I(k,n.transclude,X):X;n(p,k,v,d,r)}l=null}).error(function(a,b,c,d){throw ja("tpload",d.url);});return function(a,b,c,d,e){a=e;l?(l.push(b),l.push(c),l.push(d),l.push(a)):(n.transcludeOnThisElement&&(a=I(b,n.transclude,e)),n(p,b,c,d,a))}}function M(a,b){var c=b.priority-a.priority;return 0!==c?c:a.name!==b.name?a.name<b.name?-1:1:a.index-b.index}function La(a,b,c,d){if(b)throw ja("multidir",b.name,c.name,a,ia(d));}function Ka(a,c){var d=b(c,!0);d&&
a.push({priority:0,compile:function(a){var b=a.parent().length;b&&N(a.parent(),"ng-binding");return function(a,c){var e=c.parent(),f=e.data("$binding")||[];f.push(d);e.data("$binding",f);b||N(e,"ng-binding");a.$watch(d,function(a){c[0].nodeValue=a})}}})}function S(a,b){a=O(a||"html");switch(a){case "svg":case "math":var c=V.createElement("div");c.innerHTML="<"+a+">"+b+"</"+a+">";return c.childNodes[0].childNodes;default:return b}}function Za(a,b){if("srcdoc"==b)return v.HTML;var c=na(a);if("xlinkHref"==
b||"form"==c&&"action"==b||"img"!=c&&("src"==b||"ngSrc"==b))return v.RESOURCE_URL}function fa(a,c,d,e){var f=b(d,!0);if(f){if("multiple"===e&&"select"===na(a))throw ja("selmulti",ia(a));c.push({priority:100,compile:function(){return{pre:function(c,d,k){d=k.$$observers||(k.$$observers={});if(g.test(e))throw ja("nodomevents");if(f=b(k[e],!0,Za(a,e),h[e]))k[e]=f(c),(d[e]||(d[e]=[])).$$inter=!0,(k.$$observers&&k.$$observers[e].$$scope||c).$watch(f,function(a,b){"class"===e&&a!=b?k.$updateClass(a,b):k.$set(e,
a)})}}}})}}function tb(a,b,c){var d=b[0],e=b.length,f=d.parentNode,g,h;if(a)for(g=0,h=a.length;g<h;g++)if(a[g]==d){a[g++]=c;h=g+e-1;for(var k=a.length;g<k;g++,h++)h<k?a[g]=a[h]:delete a[g];a.length-=e-1;break}f&&f.replaceChild(c,d);a=V.createDocumentFragment();a.appendChild(d);c[B.expando]=d[B.expando];d=1;for(e=b.length;d<e;d++)f=b[d],B(f).remove(),a.appendChild(f),delete b[d];b[0]=c;b.length=1}function Dc(a,b){return C(function(){return a.apply(null,arguments)},a,b)}var Pb=function(a,b){this.$$element=
a;this.$attr=b||{}};Pb.prototype={$normalize:oa,$addClass:function(a){a&&0<a.length&&x.addClass(this.$$element,a)},$removeClass:function(a){a&&0<a.length&&x.removeClass(this.$$element,a)},$updateClass:function(a,b){var c=Fc(a,b),d=Fc(b,a);0===c.length?x.removeClass(this.$$element,d):0===d.length?x.addClass(this.$$element,c):x.setClass(this.$$element,c,d)},$set:function(a,b,c,d){var e=this.$$element[0],f=xc(e,a),g=Le(e,a),e=a;f?(this.$$element.prop(a,b),d=f):g&&(this[g]=b,e=g);this[a]=b;d?this.$attr[a]=
d:(d=this.$attr[a])||(this.$attr[a]=d=jb(a,"-"));f=na(this.$$element);if("a"===f&&"href"===a||"img"===f&&"src"===a)this[a]=b=r(b,"src"===a);!1!==c&&(null===b||b===s?this.$$element.removeAttr(d):this.$$element.attr(d,b));(a=this.$$observers)&&q(a[e],function(a){try{a(b)}catch(c){p(c)}})},$observe:function(a,b){var c=this,d=c.$$observers||(c.$$observers={}),e=d[a]||(d[a]=[]);e.push(b);w.$evalAsync(function(){e.$$inter||b(c[a])});return function(){Ca(e,b)}}};var Q=b.startSymbol(),P=b.endSymbol(),Ec=
"{{"==Q||"}}"==P?Aa:function(a){return a.replace(/\{\{/g,Q).replace(/}}/g,P)},Ja=/^ngAttr[A-Z]/;return U}]}function oa(b){return Va(b.replace(Se,""))}function Fc(b,a){var c="",d=b.split(/\s+/),e=a.split(/\s+/),f=0;a:for(;f<d.length;f++){for(var h=d[f],g=0;g<e.length;g++)if(h==e[g])continue a;c+=(0<c.length?" ":"")+h}return c}function je(){var b={},a=!1,c=/^(\S+)(\s+as\s+(\w+))?$/;this.register=function(a,c){za(a,"controller");R(a)?C(b,a):b[a]=c};this.allowGlobals=function(){a=!0};this.$get=["$injector",
"$window",function(d,e){return function(f,h){var g,m,l;G(f)&&(g=f.match(c),m=g[1],l=g[3],f=b.hasOwnProperty(m)?b[m]:jc(h.$scope,m,!0)||(a?jc(e,m,!0):s),Sa(f,m,!0));g=d.instantiate(f,h,m);if(l){if(!h||"object"!==typeof h.$scope)throw S("$controller")("noscp",m||f.name,l);h.$scope[l]=g}return g}}]}function ke(){this.$get=["$window",function(b){return B(b.document)}]}function le(){this.$get=["$log",function(b){return function(a,c){b.error.apply(b,arguments)}}]}function Gc(b){var a={},c,d,e;if(!b)return a;
q(b.split("\n"),function(b){e=b.indexOf(":");c=O($(b.substr(0,e)));d=$(b.substr(e+1));c&&(a[c]=a[c]?a[c]+", "+d:d)});return a}function Hc(b){var a=R(b)?b:s;return function(c){a||(a=Gc(b));return c?a[O(c)]||null:a}}function Ic(b,a,c){if(H(c))return c(b,a);q(c,function(c){b=c(b,a)});return b}function oe(){var b=/^\s*(\[|\{[^\{])/,a=/[\}\]]\s*$/,c=/^\)\]\}',?\n/,d={"Content-Type":"application/json;charset=utf-8"},e=this.defaults={transformResponse:[function(d){G(d)&&(d=d.replace(c,""),b.test(d)&&a.test(d)&&
(d=fc(d)));return d}],transformRequest:[function(a){return R(a)&&"[object File]"!==xa.call(a)&&"[object Blob]"!==xa.call(a)?sa(a):a}],headers:{common:{Accept:"application/json, text/plain, */*"},post:ha(d),put:ha(d),patch:ha(d)},xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN"},f=this.interceptors=[];this.$get=["$httpBackend","$browser","$cacheFactory","$rootScope","$q","$injector",function(a,b,c,d,n,p){function k(a){function b(a){var d=C({},a,{data:Ic(a.data,a.headers,c.transformResponse)});
return 200<=a.status&&300>a.status?d:n.reject(d)}var c={method:"get",transformRequest:e.transformRequest,transformResponse:e.transformResponse},d=function(a){var b=e.headers,c=C({},a.headers),d,f,b=C({},b.common,b[O(a.method)]);a:for(d in b){a=O(d);for(f in c)if(O(f)===a)continue a;c[d]=b[d]}(function(a){var b;q(a,function(c,d){H(c)&&(b=c(),null!=b?a[d]=b:delete a[d])})})(c);return c}(a);C(c,a);c.headers=d;c.method=lb(c.method);var f=[function(a){d=a.headers;var c=Ic(a.data,Hc(d),a.transformRequest);
F(c)&&q(d,function(a,b){"content-type"===O(b)&&delete d[b]});F(a.withCredentials)&&!F(e.withCredentials)&&(a.withCredentials=e.withCredentials);return t(a,c,d).then(b,b)},s],g=n.when(c);for(q(w,function(a){(a.request||a.requestError)&&f.unshift(a.request,a.requestError);(a.response||a.responseError)&&f.push(a.response,a.responseError)});f.length;){a=f.shift();var h=f.shift(),g=g.then(a,h)}g.success=function(a){g.then(function(b){a(b.data,b.status,b.headers,c)});return g};g.error=function(a){g.then(null,
function(b){a(b.data,b.status,b.headers,c)});return g};return g}function t(c,f,m){function p(a,b,c,e){E&&(200<=a&&300>a?E.put(X,[a,b,Gc(c),e]):E.remove(X));t(b,a,c,e);d.$$phase||d.$apply()}function t(a,b,d,e){b=Math.max(b,0);(200<=b&&300>b?q.resolve:q.reject)({data:a,status:b,headers:Hc(d),config:c,statusText:e})}function w(){var a=Pa(k.pendingRequests,c);-1!==a&&k.pendingRequests.splice(a,1)}var q=n.defer(),I=q.promise,E,z,X=u(c.url,c.params);k.pendingRequests.push(c);I.then(w,w);(c.cache||e.cache)&&
(!1!==c.cache&&"GET"==c.method)&&(E=R(c.cache)?c.cache:R(e.cache)?e.cache:K);if(E)if(z=E.get(X),D(z)){if(z&&H(z.then))return z.then(w,w),z;L(z)?t(z[1],z[0],ha(z[2]),z[3]):t(z,200,{},"OK")}else E.put(X,I);F(z)&&((z=Qb(c.url)?b.cookies()[c.xsrfCookieName||e.xsrfCookieName]:s)&&(m[c.xsrfHeaderName||e.xsrfHeaderName]=z),a(c.method,X,f,p,m,c.timeout,c.withCredentials,c.responseType));return I}function u(a,b){if(!b)return a;var c=[];id(b,function(a,b){null===a||F(a)||(L(a)||(a=[a]),q(a,function(a){R(a)&&
(da(a)?a=a.toISOString():R(a)&&(a=sa(a)));c.push(ya(b)+"="+ya(a))}))});0<c.length&&(a+=(-1==a.indexOf("?")?"?":"&")+c.join("&"));return a}var K=c("$http"),w=[];q(f,function(a){w.unshift(G(a)?p.get(a):p.invoke(a))});k.pendingRequests=[];(function(a){q(arguments,function(a){k[a]=function(b,c){return k(C(c||{},{method:a,url:b}))}})})("get","delete","head","jsonp");(function(a){q(arguments,function(a){k[a]=function(b,c,d){return k(C(d||{},{method:a,url:b,data:c}))}})})("post","put","patch");k.defaults=
e;return k}]}function Te(b){if(8>=T&&(!b.match(/^(get|post|head|put|delete|options)$/i)||!P.XMLHttpRequest))return new P.ActiveXObject("Microsoft.XMLHTTP");if(P.XMLHttpRequest)return new P.XMLHttpRequest;throw S("$httpBackend")("noxhr");}function pe(){this.$get=["$browser","$window","$document",function(b,a,c){return Ue(b,Te,b.defer,a.angular.callbacks,c[0])}]}function Ue(b,a,c,d,e){function f(a,b,c){var f=e.createElement("script"),h=null;f.type="text/javascript";f.src=a;f.async=!0;h=function(a){Wa(f,
"load",h);Wa(f,"error",h);e.body.removeChild(f);f=null;var g=-1,u="unknown";a&&("load"!==a.type||d[b].called||(a={type:"error"}),u=a.type,g="error"===a.type?404:200);c&&c(g,u)};ub(f,"load",h);ub(f,"error",h);e.body.appendChild(f);return h}var h=-1;return function(e,m,l,n,p,k,t,u){function K(){y=h;x&&x();r&&r.abort()}function w(a,d,e,f,g){N&&c.cancel(N);x=r=null;0===d&&(d=e?200:"file"==ua(m).protocol?404:0);a(1223===d?204:d,e,f,g||"");b.$$completeOutstandingRequest(A)}var y;b.$$incOutstandingRequestCount();
m=m||b.url();if("jsonp"==O(e)){var v="_"+(d.counter++).toString(36);d[v]=function(a){d[v].data=a;d[v].called=!0};var x=f(m.replace("JSON_CALLBACK","angular.callbacks."+v),v,function(a,b){w(n,a,d[v].data,"",b);d[v]=A})}else{var r=a(e);r.open(e,m,!0);q(p,function(a,b){D(a)&&r.setRequestHeader(b,a)});r.onreadystatechange=function(){if(r&&4==r.readyState){var a=null,b=null,c="";y!==h&&(a=r.getAllResponseHeaders(),b="response"in r?r.response:r.responseText);y===h&&10>T||(c=r.statusText);w(n,y||r.status,
b,a,c)}};t&&(r.withCredentials=!0);if(u)try{r.responseType=u}catch(U){if("json"!==u)throw U;}r.send(l||null)}if(0<k)var N=c(K,k);else k&&H(k.then)&&k.then(K)}}function me(){var b="{{",a="}}";this.startSymbol=function(a){return a?(b=a,this):b};this.endSymbol=function(b){return b?(a=b,this):a};this.$get=["$parse","$exceptionHandler","$sce",function(c,d,e){function f(a){return"\\\\\\"+a}function h(f,h,t,u){function K(a){try{var b;var c=t?e.getTrusted(t,a):e.valueOf(a);if(null==c)b="";else{switch(typeof c){case "string":break;
case "number":c=""+c;break;default:c=sa(c)}b=c}return b}catch(g){a=Rb("interr",f,g.toString()),d(a)}}u=!!u;for(var w,y,v=0,x=[],r=[],U=[],N=f.length,W=!1,I=!1,E=[];v<N;)if(-1!=(w=f.indexOf(b,v))&&-1!=(y=f.indexOf(a,w+g)))v!==w&&(I=!0),x.push(f.substring(v,w)),v=f.substring(w+g,y),r.push(v),U.push(c(v,K)),v=y+m,W=!0;else{v!==N&&(I=!0,x.push(f.substring(v)));break}q(x,function(c,d){x[d]=x[d].replace(l,b).replace(n,a)});x.length===r.length&&x.push("");if(t&&W&&(I||1<r.length))throw Rb("noconcat",f);
if(!h||W){E.length=x.length+r.length;var z=function(a){for(var b=0,c=r.length;b<c;b++){if(u&&F(a[b]))return;E[2*b]=x[b];E[2*b+1]=a[b]}E[2*c]=x[c];return E.join("")};return C(function(a){var b=0,c=r.length,e=Array(c);try{for(;b<c;b++)e[b]=U[b](a);return z(e)}catch(g){a=Rb("interr",f,g.toString()),d(a)}},{exp:f,separators:x,expressions:r,$$watchDelegate:function(a,b,c,d){var e;return a.$watchGroup(U,function(c,d){var f=z(c);H(b)&&b.call(this,f,c!==d?e:f,a);e=f},c,d)}})}}var g=b.length,m=a.length,l=
RegExp(b.replace(/./g,f),"g"),n=RegExp(a.replace(/./g,f),"g");h.startSymbol=function(){return b};h.endSymbol=function(){return a};return h}]}function ne(){this.$get=["$rootScope","$window","$q","$$q",function(b,a,c,d){function e(e,g,m,l){var n=a.setInterval,p=a.clearInterval,k=0,t=D(l)&&!l,u=(t?d:c).defer(),K=u.promise;m=D(m)?m:0;K.then(null,null,e);K.$$intervalId=n(function(){u.notify(k++);0<m&&k>=m&&(u.resolve(k),p(K.$$intervalId),delete f[K.$$intervalId]);t||b.$apply()},g);f[K.$$intervalId]=u;
return K}var f={};e.cancel=function(b){return b&&b.$$intervalId in f?(f[b.$$intervalId].reject("canceled"),a.clearInterval(b.$$intervalId),delete f[b.$$intervalId],!0):!1};return e}]}function vd(){this.$get=function(){return{id:"en-us",NUMBER_FORMATS:{DECIMAL_SEP:".",GROUP_SEP:",",PATTERNS:[{minInt:1,minFrac:0,maxFrac:3,posPre:"",posSuf:"",negPre:"-",negSuf:"",gSize:3,lgSize:3},{minInt:1,minFrac:2,maxFrac:2,posPre:"\u00a4",posSuf:"",negPre:"(\u00a4",negSuf:")",gSize:3,lgSize:3}],CURRENCY_SYM:"$"},
DATETIME_FORMATS:{MONTH:"January February March April May June July August September October November December".split(" "),SHORTMONTH:"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec".split(" "),DAY:"Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),SHORTDAY:"Sun Mon Tue Wed Thu Fri Sat".split(" "),AMPMS:["AM","PM"],medium:"MMM d, y h:mm:ss a","short":"M/d/yy h:mm a",fullDate:"EEEE, MMMM d, y",longDate:"MMMM d, y",mediumDate:"MMM d, y",shortDate:"M/d/yy",mediumTime:"h:mm:ss a",
shortTime:"h:mm a"},pluralCat:function(b){return 1===b?"one":"other"}}}}function Sb(b){b=b.split("/");for(var a=b.length;a--;)b[a]=hb(b[a]);return b.join("/")}function Jc(b,a,c){b=ua(b,c);a.$$protocol=b.protocol;a.$$host=b.hostname;a.$$port=Y(b.port)||Ve[b.protocol]||null}function Kc(b,a,c){var d="/"!==b.charAt(0);d&&(b="/"+b);b=ua(b,c);a.$$path=decodeURIComponent(d&&"/"===b.pathname.charAt(0)?b.pathname.substring(1):b.pathname);a.$$search=hc(b.search);a.$$hash=decodeURIComponent(b.hash);a.$$path&&
"/"!=a.$$path.charAt(0)&&(a.$$path="/"+a.$$path)}function pa(b,a){if(0===a.indexOf(b))return a.substr(b.length)}function $a(b){var a=b.indexOf("#");return-1==a?b:b.substr(0,a)}function Tb(b){return b.substr(0,$a(b).lastIndexOf("/")+1)}function Lc(b,a){this.$$html5=!0;a=a||"";var c=Tb(b);Jc(b,this,b);this.$$parse=function(a){var e=pa(c,a);if(!G(e))throw Ub("ipthprfx",a,c);Kc(e,this,b);this.$$path||(this.$$path="/");this.$$compose()};this.$$compose=function(){var a=Gb(this.$$search),b=this.$$hash?"#"+
hb(this.$$hash):"";this.$$url=Sb(this.$$path)+(a?"?"+a:"")+b;this.$$absUrl=c+this.$$url.substr(1)};this.$$rewrite=function(d){var e;if((e=pa(b,d))!==s)return d=e,(e=pa(a,e))!==s?c+(pa("/",e)||e):b+d;if((e=pa(c,d))!==s)return c+e;if(c==d+"/")return c}}function Vb(b,a){var c=Tb(b);Jc(b,this,b);this.$$parse=function(d){var e=pa(b,d)||pa(c,d),e="#"==e.charAt(0)?pa(a,e):this.$$html5?e:"";if(!G(e))throw Ub("ihshprfx",d,a);Kc(e,this,b);d=this.$$path;var f=/^\/[A-Z]:(\/.*)/;0===e.indexOf(b)&&(e=e.replace(b,
""));f.exec(e)||(d=(e=f.exec(d))?e[1]:d);this.$$path=d;this.$$compose()};this.$$compose=function(){var c=Gb(this.$$search),e=this.$$hash?"#"+hb(this.$$hash):"";this.$$url=Sb(this.$$path)+(c?"?"+c:"")+e;this.$$absUrl=b+(this.$$url?a+this.$$url:"")};this.$$rewrite=function(a){if($a(b)==$a(a))return a}}function Wb(b,a){this.$$html5=!0;Vb.apply(this,arguments);var c=Tb(b);this.$$rewrite=function(d){var e;if(b==$a(d))return d;if(e=pa(c,d))return b+a+e;if(c===d+"/")return c};this.$$compose=function(){var c=
Gb(this.$$search),e=this.$$hash?"#"+hb(this.$$hash):"";this.$$url=Sb(this.$$path)+(c?"?"+c:"")+e;this.$$absUrl=b+a+this.$$url}}function vb(b){return function(){return this[b]}}function Mc(b,a){return function(c){if(F(c))return this[b];this[b]=a(c);this.$$compose();return this}}function qe(){var b="",a=!1;this.hashPrefix=function(a){return D(a)?(b=a,this):b};this.html5Mode=function(b){return D(b)?(a=b,this):a};this.$get=["$rootScope","$browser","$sniffer","$rootElement",function(c,d,e,f){function h(a){c.$broadcast("$locationChangeSuccess",
g.absUrl(),a)}var g,m,l=d.baseHref(),n=d.url(),p;a?(p=n.substring(0,n.indexOf("/",n.indexOf("//")+2))+(l||"/"),m=e.history?Lc:Wb):(p=$a(n),m=Vb);g=new m(p,"#"+b);g.$$parse(g.$$rewrite(n));f.on("click",function(a){if(!a.ctrlKey&&!a.metaKey&&2!=a.which){for(var e=B(a.target);"a"!==na(e[0]);)if(e[0]===f[0]||!(e=e.parent())[0])return;var h=e.prop("href");R(h)&&"[object SVGAnimatedString]"===h.toString()&&(h=ua(h.animVal).href);if(m===Wb){var k=e.attr("href")||e.attr("xlink:href");if(0>k.indexOf("://"))if(h=
"#"+b,"/"==k[0])h=p+h+k;else if("#"==k[0])h=p+h+(g.path()||"/")+k;else{for(var l=g.path().split("/"),k=k.split("/"),n=0;n<k.length;n++)"."!=k[n]&&(".."==k[n]?l.pop():k[n].length&&l.push(k[n]));h=p+h+l.join("/")}}l=g.$$rewrite(h);h&&(!e.attr("target")&&l&&!a.isDefaultPrevented())&&(a.preventDefault(),l!=d.url()&&(g.$$parse(l),c.$apply(),P.angular["ff-684208-preventDefault"]=!0))}});g.absUrl()!=n&&d.url(g.absUrl(),!0);d.onUrlChange(function(a){g.absUrl()!=a&&(c.$evalAsync(function(){var b=g.absUrl();
g.$$parse(a);c.$broadcast("$locationChangeStart",a,b).defaultPrevented?(g.$$parse(b),d.url(b)):h(b)}),c.$$phase||c.$digest())});var k=0;c.$watch(function(){var a=d.url(),b=g.$$replace;k&&a==g.absUrl()||(k++,c.$evalAsync(function(){c.$broadcast("$locationChangeStart",g.absUrl(),a).defaultPrevented?g.$$parse(a):(d.url(g.absUrl(),b),h(a))}));g.$$replace=!1;return k});return g}]}function re(){var b=!0,a=this;this.debugEnabled=function(a){return D(a)?(b=a,this):b};this.$get=["$window",function(c){function d(a){a instanceof
Error&&(a.stack?a=a.message&&-1===a.stack.indexOf(a.message)?"Error: "+a.message+"\n"+a.stack:a.stack:a.sourceURL&&(a=a.message+"\n"+a.sourceURL+":"+a.line));return a}function e(a){var b=c.console||{},e=b[a]||b.log||A;a=!1;try{a=!!e.apply}catch(m){}return a?function(){var a=[];q(arguments,function(b){a.push(d(b))});return e.apply(b,a)}:function(a,b){e(a,null==b?"":b)}}return{log:e("log"),info:e("info"),warn:e("warn"),error:e("error"),debug:function(){var c=e("debug");return function(){b&&c.apply(a,
arguments)}}()}}]}function qa(b,a){if("__defineGetter__"===b||"__defineSetter__"===b||"__lookupGetter__"===b||"__lookupSetter__"===b||"__proto__"===b)throw ka("isecfld",a);return b}function Ma(b,a){if(b){if(b.constructor===b)throw ka("isecfn",a);if(b.window===b)throw ka("isecwindow",a);if(b.children&&(b.nodeName||b.prop&&b.attr&&b.find))throw ka("isecdom",a);if(b===Object)throw ka("isecobj",a);}return b}function wb(b,a,c,d){a=a.split(".");for(var e,f=0;1<a.length;f++){e=qa(a.shift(),d);var h=b[e];
h||(h={},b[e]=h);b=h}e=qa(a.shift(),d);Ma(b,d);Ma(b[e],d);return b[e]=c}function Nc(b,a,c,d,e,f){qa(b,f);qa(a,f);qa(c,f);qa(d,f);qa(e,f);return function(f,g){var m=g&&g.hasOwnProperty(b)?g:f;if(null==m)return m;m=m[b];if(!a)return m;if(null==m)return s;m=m[a];if(!c)return m;if(null==m)return s;m=m[c];if(!d)return m;if(null==m)return s;m=m[d];return e?null==m?s:m=m[e]:m}}function Oc(b,a,c){if(Xb.hasOwnProperty(b))return Xb[b];var d=b.split("."),e=d.length;if(a.csp)a=6>e?Nc(d[0],d[1],d[2],d[3],d[4],
c):function(a,b){var f=0,l;do l=Nc(d[f++],d[f++],d[f++],d[f++],d[f++],c)(a,b),b=s,a=l;while(f<e);return l};else{var f="var p;\n";q(d,function(a,b){qa(a,c);f+="if(s == null) return undefined;\ns="+(b?"s":'((k&&k.hasOwnProperty("'+a+'"))?k:s)')+"."+a+";\n"});f+="return s;";a=new Function("s","k",f);a.toString=ba(f)}"hasOwnProperty"!==b&&(Xb[b]=a);return a}function se(){var b={},a={csp:!1};this.$get=["$filter","$sniffer",function(c,d){function e(a,b,c,d,e){var f,h;return f=a.$watch(function(a){return e(a)},
function(a,c,d){h=a;H(b)&&b.apply(this,arguments);D(a)&&d.$$postDigest(function(){D(h)&&f()})},c,d)}function f(a,b,c,d,e){var f;return f=a.$watch(function(a){return e(a)},function(a,c,d){H(b)&&b.apply(this,arguments);f()},c,d)}function h(a,b){if(H(b)){var c=function(c,d){var e=a(c,d),f=b(e,c,d);return D(e)?f:e};c.$$watchDelegate=a.$$watchDelegate;return c}return a}a.csp=d.csp;return function(d,m){var l,n,p=d=$(d);switch(typeof d){case "string":return b.hasOwnProperty(p)?l=b[p]:(":"===d.charAt(0)&&
":"===d.charAt(1)&&(n=!0,d=d.substring(2)),l=new Yb(a),l=(new ab(l,c,a)).parse(d),l.constant?l.$$watchDelegate=f:n&&(l.$$watchDelegate=e),"hasOwnProperty"!==p&&(b[p]=l)),h(l,m);case "function":return h(d,m);default:return h(A,m)}}}]}function ue(){this.$get=["$rootScope","$exceptionHandler",function(b,a){return Pc(function(a){b.$evalAsync(a)},a)}]}function ve(){this.$get=["$browser","$exceptionHandler",function(b,a){return Pc(function(a){b.defer(a)},a)}]}function Pc(b,a){function c(a){return a}function d(a){return h(a)}
var e=function(){var h=[],m,p;return p={resolve:function(a){if(h){var c=h;h=s;m=f(a);c.length&&b(function(){for(var a,b=0,d=c.length;b<d;b++)a=c[b],m.then(a[0],a[1],a[2])})}},reject:function(a){p.resolve(g(a))},notify:function(a){if(h){var c=h;h.length&&b(function(){for(var b,d=0,e=c.length;d<e;d++)b=c[d],b[2](a)})}},promise:{then:function(b,f,g){var p=e(),w=function(d){try{p.resolve((H(b)?b:c)(d))}catch(e){p.reject(e),a(e)}},y=function(b){try{p.resolve((H(f)?f:d)(b))}catch(c){p.reject(c),a(c)}},
v=function(b){try{p.notify((H(g)?g:c)(b))}catch(d){a(d)}};h?h.push([w,y,v]):m.then(w,y,v);return p.promise},"catch":function(a){return this.then(null,a)},"finally":function(a){function b(a,c){var d=e();c?d.resolve(a):d.reject(a);return d.promise}function d(e,f){var g=null;try{g=(a||c)()}catch(h){return b(h,!1)}return g&&H(g.then)?g.then(function(){return b(e,f)},function(a){return b(a,!1)}):b(e,f)}return this.then(function(a){return d(a,!0)},function(a){return d(a,!1)})}}}},f=function(a){return a&&
H(a.then)?a:{then:function(c){var d=e();b(function(){d.resolve(c(a))});return d.promise}}},h=function(a){var b=e();b.reject(a);return b.promise},g=function(c){return{then:function(f,g){var h=e();b(function(){try{h.resolve((H(g)?g:d)(c))}catch(b){h.reject(b),a(b)}});return h.promise}}},m=function n(a){if(!H(a))throw new TypeError("Expected resolverFn");if(!(this instanceof n))return new n(a);var b=e();a(function(a){b.resolve(a)},function(a){b.reject(a)});return b.promise};m.defer=e;m.reject=h;m.when=
function(g,m,k,t){var u=e(),K,w=function(b){try{return(H(m)?m:c)(b)}catch(d){return a(d),h(d)}},y=function(b){try{return(H(k)?k:d)(b)}catch(c){return a(c),h(c)}},v=function(b){try{return(H(t)?t:c)(b)}catch(d){a(d)}};b(function(){f(g).then(function(a){K||(K=!0,u.resolve(f(a).then(w,y,v)))},function(a){K||(K=!0,u.resolve(y(a)))},function(a){K||u.notify(v(a))})});return u.promise};m.all=function(a){var b=e(),c=0,d=L(a)?[]:{};q(a,function(a,e){c++;f(a).then(function(a){d.hasOwnProperty(e)||(d[e]=a,--c||
b.resolve(d))},function(a){d.hasOwnProperty(e)||b.reject(a)})});0===c&&b.resolve(d);return b.promise};return m}function Ce(){this.$get=["$window","$timeout",function(b,a){var c=b.requestAnimationFrame||b.webkitRequestAnimationFrame||b.mozRequestAnimationFrame,d=b.cancelAnimationFrame||b.webkitCancelAnimationFrame||b.mozCancelAnimationFrame||b.webkitCancelRequestAnimationFrame,e=!!c,f=e?function(a){var b=c(a);return function(){d(b)}}:function(b){var c=a(b,16.66,!1);return function(){a.cancel(c)}};
f.supported=e;return f}]}function te(){var b=10,a=S("$rootScope"),c=null;this.digestTtl=function(a){arguments.length&&(b=a);return b};this.$get=["$injector","$exceptionHandler","$parse","$browser",function(d,e,f,h){function g(){this.$id=++fb;this.$$phase=this.$parent=this.$$watchers=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=null;this["this"]=this.$root=this;this.$$destroyed=!1;this.$$asyncQueue=[];this.$$postDigestQueue=[];this.$$listeners={};this.$$listenerCount={};
this.$$isolateBindings={}}function m(b){if(k.$$phase)throw a("inprog",k.$$phase);k.$$phase=b}function l(a,b){var c=f(a);Sa(c,b);return c}function n(a,b,c){do a.$$listenerCount[c]-=b,0===a.$$listenerCount[c]&&delete a.$$listenerCount[c];while(a=a.$parent)}function p(){}g.prototype={constructor:g,$new:function(a){a?(a=new g,a.$root=this.$root,a.$$asyncQueue=this.$$asyncQueue,a.$$postDigestQueue=this.$$postDigestQueue):(this.$$childScopeClass||(this.$$childScopeClass=function(){this.$$watchers=this.$$nextSibling=
this.$$childHead=this.$$childTail=null;this.$$listeners={};this.$$listenerCount={};this.$id=++fb;this.$$childScopeClass=null},this.$$childScopeClass.prototype=this),a=new this.$$childScopeClass);a["this"]=a;a.$parent=this;a.$$prevSibling=this.$$childTail;this.$$childHead?this.$$childTail=this.$$childTail.$$nextSibling=a:this.$$childHead=this.$$childTail=a;return a},$watch:function(a,b,d,e){var f=l(a,"watch");if(f.$$watchDelegate)return f.$$watchDelegate(this,b,d,e,f);var g=this.$$watchers,h={fn:b,
last:p,get:f,exp:a,eq:!!d};c=null;H(b)||(h.fn=A);g||(g=this.$$watchers=[]);g.unshift(h);return function(){Ca(g,h);c=null;H(e)&&e()}},$watchGroup:function(a,b){var c=Array(a.length),d=Array(a.length),e=[],f=0,g=this,h;if(1===a.length)return this.$watch(a[0],function(a,e,f){d[0]=a;c[0]=e;b.call(this,d,a===e?d:c,f)});q(a,function(a,b){var k=g.$watch(a,function(a,e){d[b]=a;c[b]=e;f++},!1,function(){Ca(e,k);e.length||h()});e.push(k)},this);h=g.$watch(function(){return f},function(a,e){b(d,a===e?d:c,g)});
return function(){for(;e.length;)e[0]()}},$watchCollection:function(a,b){var c=this,d,e,g,h=1<b.length,k=0,m=f(a,function(a){d=a;var b,c;if(R(d))if(eb(d))for(e!==l&&(e=l,q=e.length=0,k++),a=d.length,q!==a&&(k++,e.length=q=a),b=0;b<a;b++)c=e[b]!==e[b]&&d[b]!==d[b],c||e[b]===d[b]||(k++,e[b]=d[b]);else{e!==n&&(e=n={},q=0,k++);a=0;for(b in d)d.hasOwnProperty(b)&&(a++,e.hasOwnProperty(b)?(c=e[b]!==e[b]&&d[b]!==d[b],c||e[b]===d[b]||(k++,e[b]=d[b])):(q++,e[b]=d[b],k++));if(q>a)for(b in k++,e)e.hasOwnProperty(b)&&
!d.hasOwnProperty(b)&&(q--,delete e[b])}else e!==d&&(e=d,k++);return k}),l=[],n={},p=!0,q=0;return this.$watch(m,function(){p?(p=!1,b(d,d,c)):b(d,g,c);if(h)if(R(d))if(eb(d)){g=Array(d.length);for(var a=0;a<d.length;a++)g[a]=d[a]}else for(a in g={},d)Fb.call(d,a)&&(g[a]=d[a]);else g=d})},$digest:function(){var d,f,g,h,l=this.$$asyncQueue,n=this.$$postDigestQueue,q,r,U=b,N,D=[],I,E,z;m("$digest");c=null;do{r=!1;for(N=this;l.length;){try{z=l.shift(),z.scope.$eval(z.expression)}catch(s){k.$$phase=null,
e(s)}c=null}a:do{if(h=N.$$watchers)for(q=h.length;q--;)try{if(d=h[q])if((f=d.get(N))!==(g=d.last)&&!(d.eq?ra(f,g):"number"===typeof f&&"number"===typeof g&&isNaN(f)&&isNaN(g)))r=!0,c=d,d.last=d.eq?Da(f,null):f,d.fn(f,g===p?f:g,N),5>U&&(I=4-U,D[I]||(D[I]=[]),E=H(d.exp)?"fn: "+(d.exp.name||d.exp.toString()):d.exp,E+="; newVal: "+sa(f)+"; oldVal: "+sa(g),D[I].push(E));else if(d===c){r=!1;break a}}catch(C){k.$$phase=null,e(C)}if(!(h=N.$$childHead||N!==this&&N.$$nextSibling))for(;N!==this&&!(h=N.$$nextSibling);)N=
N.$parent}while(N=h);if((r||l.length)&&!U--)throw k.$$phase=null,a("infdig",b,sa(D));}while(r||l.length);for(k.$$phase=null;n.length;)try{n.shift()()}catch(B){e(B)}},$destroy:function(){if(!this.$$destroyed){var a=this.$parent;this.$broadcast("$destroy");this.$$destroyed=!0;this!==k&&(q(this.$$listenerCount,Eb(null,n,this)),a.$$childHead==this&&(a.$$childHead=this.$$nextSibling),a.$$childTail==this&&(a.$$childTail=this.$$prevSibling),this.$$prevSibling&&(this.$$prevSibling.$$nextSibling=this.$$nextSibling),
this.$$nextSibling&&(this.$$nextSibling.$$prevSibling=this.$$prevSibling),this.$parent=this.$$nextSibling=this.$$prevSibling=this.$$childHead=this.$$childTail=this.$root=null,this.$$listeners={},this.$$watchers=this.$$asyncQueue=this.$$postDigestQueue=[],this.$destroy=this.$digest=this.$apply=A,this.$on=this.$watch=this.$watchGroup=function(){return A})}},$eval:function(a,b){return f(a)(this,b)},$evalAsync:function(a){k.$$phase||k.$$asyncQueue.length||h.defer(function(){k.$$asyncQueue.length&&k.$digest()});
this.$$asyncQueue.push({scope:this,expression:a})},$$postDigest:function(a){this.$$postDigestQueue.push(a)},$apply:function(a){try{return m("$apply"),this.$eval(a)}catch(b){e(b)}finally{k.$$phase=null;try{k.$digest()}catch(c){throw e(c),c;}}},$on:function(a,b){var c=this.$$listeners[a];c||(this.$$listeners[a]=c=[]);c.push(b);var d=this;do d.$$listenerCount[a]||(d.$$listenerCount[a]=0),d.$$listenerCount[a]++;while(d=d.$parent);var e=this;return function(){c[Pa(c,b)]=null;n(e,1,a)}},$emit:function(a,
b){var c=[],d,f=this,g=!1,h={name:a,targetScope:f,stopPropagation:function(){g=!0},preventDefault:function(){h.defaultPrevented=!0},defaultPrevented:!1},k=[h].concat(la.call(arguments,1)),m,l;do{d=f.$$listeners[a]||c;h.currentScope=f;m=0;for(l=d.length;m<l;m++)if(d[m])try{d[m].apply(null,k)}catch(n){e(n)}else d.splice(m,1),m--,l--;if(g)return h.currentScope=null,h;f=f.$parent}while(f);h.currentScope=null;return h},$broadcast:function(a,b){for(var c=this,d=this,f={name:a,targetScope:this,preventDefault:function(){f.defaultPrevented=
!0},defaultPrevented:!1},g=[f].concat(la.call(arguments,1)),h,k;c=d;){f.currentScope=c;d=c.$$listeners[a]||[];h=0;for(k=d.length;h<k;h++)if(d[h])try{d[h].apply(null,g)}catch(m){e(m)}else d.splice(h,1),h--,k--;if(!(d=c.$$listenerCount[a]&&c.$$childHead||c!==this&&c.$$nextSibling))for(;c!==this&&!(d=c.$$nextSibling);)c=c.$parent}f.currentScope=null;return f}};var k=new g;return k}]}function wd(){var b=/^\s*(https?|ftp|mailto|tel|file):/,a=/^\s*(https?|ftp|file|blob):|data:image\//;this.aHrefSanitizationWhitelist=
function(a){return D(a)?(b=a,this):b};this.imgSrcSanitizationWhitelist=function(b){return D(b)?(a=b,this):a};this.$get=function(){return function(c,d){var e=d?a:b,f;if(!T||8<=T)if(f=ua(c).href,""!==f&&!f.match(e))return"unsafe:"+f;return c}}}function We(b){if("self"===b)return b;if(G(b)){if(-1<b.indexOf("***"))throw va("iwcard",b);b=b.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08").replace("\\*\\*",".*").replace("\\*","[^:/.?&;]*");return RegExp("^"+b+"$")}if(gb(b))return RegExp("^"+
b.source+"$");throw va("imatcher");}function Qc(b){var a=[];D(b)&&q(b,function(b){a.push(We(b))});return a}function xe(){this.SCE_CONTEXTS=ga;var b=["self"],a=[];this.resourceUrlWhitelist=function(a){arguments.length&&(b=Qc(a));return b};this.resourceUrlBlacklist=function(b){arguments.length&&(a=Qc(b));return a};this.$get=["$injector",function(c){function d(a){var b=function(a){this.$$unwrapTrustedValue=function(){return a}};a&&(b.prototype=new a);b.prototype.valueOf=function(){return this.$$unwrapTrustedValue()};
b.prototype.toString=function(){return this.$$unwrapTrustedValue().toString()};return b}var e=function(a){throw va("unsafe");};c.has("$sanitize")&&(e=c.get("$sanitize"));var f=d(),h={};h[ga.HTML]=d(f);h[ga.CSS]=d(f);h[ga.URL]=d(f);h[ga.JS]=d(f);h[ga.RESOURCE_URL]=d(h[ga.URL]);return{trustAs:function(a,b){var c=h.hasOwnProperty(a)?h[a]:null;if(!c)throw va("icontext",a,b);if(null===b||b===s||""===b)return b;if("string"!==typeof b)throw va("itype",a);return new c(b)},getTrusted:function(c,d){if(null===
d||d===s||""===d)return d;var f=h.hasOwnProperty(c)?h[c]:null;if(f&&d instanceof f)return d.$$unwrapTrustedValue();if(c===ga.RESOURCE_URL){var f=ua(d.toString()),n,p,k=!1;n=0;for(p=b.length;n<p;n++)if("self"===b[n]?Qb(f):b[n].exec(f.href)){k=!0;break}if(k)for(n=0,p=a.length;n<p;n++)if("self"===a[n]?Qb(f):a[n].exec(f.href)){k=!1;break}if(k)return d;throw va("insecurl",d.toString());}if(c===ga.HTML)return e(d);throw va("unsafe");},valueOf:function(a){return a instanceof f?a.$$unwrapTrustedValue():a}}}]}
function we(){var b=!0;this.enabled=function(a){arguments.length&&(b=!!a);return b};this.$get=["$parse","$sniffer","$sceDelegate",function(a,c,d){if(b&&c.msie&&8>c.msieDocumentMode)throw va("iequirks");var e=ha(ga);e.isEnabled=function(){return b};e.trustAs=d.trustAs;e.getTrusted=d.getTrusted;e.valueOf=d.valueOf;b||(e.trustAs=e.getTrusted=function(a,b){return b},e.valueOf=Aa);e.parseAs=function(b,c){var d=a(c);return d.literal&&d.constant?d:a(c,function(a){return e.getTrusted(b,a)})};var f=e.parseAs,
h=e.getTrusted,g=e.trustAs;q(ga,function(a,b){var c=O(b);e[Va("parse_as_"+c)]=function(b){return f(a,b)};e[Va("get_trusted_"+c)]=function(b){return h(a,b)};e[Va("trust_as_"+c)]=function(b){return g(a,b)}});return e}]}function ye(){this.$get=["$window","$document",function(b,a){var c={},d=Y((/android (\d+)/.exec(O((b.navigator||{}).userAgent))||[])[1]),e=/Boxee/i.test((b.navigator||{}).userAgent),f=a[0]||{},h=f.documentMode,g,m=/^(Moz|webkit|O|ms)(?=[A-Z])/,l=f.body&&f.body.style,n=!1,p=!1;if(l){for(var k in l)if(n=
m.exec(k)){g=n[0];g=g.substr(0,1).toUpperCase()+g.substr(1);break}g||(g="WebkitOpacity"in l&&"webkit");n=!!("transition"in l||g+"Transition"in l);p=!!("animation"in l||g+"Animation"in l);!d||n&&p||(n=G(f.body.style.webkitTransition),p=G(f.body.style.webkitAnimation))}return{history:!(!b.history||!b.history.pushState||4>d||e),hashchange:"onhashchange"in b&&(!h||7<h),hasEvent:function(a){if("input"==a&&9==T)return!1;if(F(c[a])){var b=f.createElement("div");c[a]="on"+a in b}return c[a]},csp:Ta(),vendorPrefix:g,
transitions:n,animations:p,android:d,msie:T,msieDocumentMode:h}}]}function Ae(){this.$get=["$rootScope","$browser","$q","$$q","$exceptionHandler",function(b,a,c,d,e){function f(f,m,l){var n=D(l)&&!l,p=(n?d:c).defer(),k=p.promise;m=a.defer(function(){try{p.resolve(f())}catch(a){p.reject(a),e(a)}finally{delete h[k.$$timeoutId]}n||b.$apply()},m);k.$$timeoutId=m;h[m]=p;return k}var h={};f.cancel=function(b){return b&&b.$$timeoutId in h?(h[b.$$timeoutId].reject("canceled"),delete h[b.$$timeoutId],a.defer.cancel(b.$$timeoutId)):
!1};return f}]}function ua(b,a){var c=b;T&&(Z.setAttribute("href",c),c=Z.href);Z.setAttribute("href",c);return{href:Z.href,protocol:Z.protocol?Z.protocol.replace(/:$/,""):"",host:Z.host,search:Z.search?Z.search.replace(/^\?/,""):"",hash:Z.hash?Z.hash.replace(/^#/,""):"",hostname:Z.hostname,port:Z.port,pathname:"/"===Z.pathname.charAt(0)?Z.pathname:"/"+Z.pathname}}function Qb(b){b=G(b)?ua(b):b;return b.protocol===Rc.protocol&&b.host===Rc.host}function Be(){this.$get=ba(P)}function rc(b){function a(d,
e){if(R(d)){var f={};q(d,function(b,c){f[c]=a(c,b)});return f}return b.factory(d+c,e)}var c="Filter";this.register=a;this.$get=["$injector",function(a){return function(b){return a.get(b+c)}}];a("currency",Sc);a("date",Tc);a("filter",Xe);a("json",Ye);a("limitTo",Ze);a("lowercase",$e);a("number",Uc);a("orderBy",Vc);a("uppercase",af)}function Xe(){return function(b,a,c){if(!L(b))return b;var d=typeof c,e=[];e.check=function(a){for(var b=0;b<e.length;b++)if(!e[b](a))return!1;return!0};"function"!==d&&
(c="boolean"===d&&c?function(a,b){return Ra.equals(a,b)}:function(a,b){if(a&&b&&"object"===typeof a&&"object"===typeof b){for(var d in a)if("$"!==d.charAt(0)&&Fb.call(a,d)&&c(a[d],b[d]))return!0;return!1}b=(""+b).toLowerCase();return-1<(""+a).toLowerCase().indexOf(b)});var f=function(a,b){if("string"==typeof b&&"!"===b.charAt(0))return!f(a,b.substr(1));switch(typeof a){case "boolean":case "number":case "string":return c(a,b);case "object":switch(typeof b){case "object":return c(a,b);default:for(var d in a)if("$"!==
d.charAt(0)&&f(a[d],b))return!0}return!1;case "array":for(d=0;d<a.length;d++)if(f(a[d],b))return!0;return!1;default:return!1}};switch(typeof a){case "boolean":case "number":case "string":a={$:a};case "object":for(var h in a)(function(b){"undefined"!==typeof a[b]&&e.push(function(c){return f("$"==b?c:c&&c[b],a[b])})})(h);break;case "function":e.push(a);break;default:return b}d=[];for(h=0;h<b.length;h++){var g=b[h];e.check(g)&&d.push(g)}return d}}function Sc(b){var a=b.NUMBER_FORMATS;return function(b,
d){F(d)&&(d=a.CURRENCY_SYM);return Wc(b,a.PATTERNS[1],a.GROUP_SEP,a.DECIMAL_SEP,2).replace(/\u00A4/g,d)}}function Uc(b){var a=b.NUMBER_FORMATS;return function(b,d){return Wc(b,a.PATTERNS[0],a.GROUP_SEP,a.DECIMAL_SEP,d)}}function Wc(b,a,c,d,e){if(null==b||!isFinite(b)||R(b))return"";var f=0>b;b=Math.abs(b);var h=b+"",g="",m=[],l=!1;if(-1!==h.indexOf("e")){var n=h.match(/([\d\.]+)e(-?)(\d+)/);n&&"-"==n[2]&&n[3]>e+1?(h="0",b=0):(g=h,l=!0)}if(l)0<e&&(-1<b&&1>b)&&(g=b.toFixed(e));else{h=(h.split(Xc)[1]||
"").length;F(e)&&(e=Math.min(Math.max(a.minFrac,h),a.maxFrac));b=+(Math.round(+(b.toString()+"e"+e)).toString()+"e"+-e);b=(""+b).split(Xc);h=b[0];b=b[1]||"";var n=0,p=a.lgSize,k=a.gSize;if(h.length>=p+k)for(n=h.length-p,l=0;l<n;l++)0===(n-l)%k&&0!==l&&(g+=c),g+=h.charAt(l);for(l=n;l<h.length;l++)0===(h.length-l)%p&&0!==l&&(g+=c),g+=h.charAt(l);for(;b.length<e;)b+="0";e&&"0"!==e&&(g+=d+b.substr(0,e))}m.push(f?a.negPre:a.posPre);m.push(g);m.push(f?a.negSuf:a.posSuf);return m.join("")}function xb(b,
a,c){var d="";0>b&&(d="-",b=-b);for(b=""+b;b.length<a;)b="0"+b;c&&(b=b.substr(b.length-a));return d+b}function aa(b,a,c,d){c=c||0;return function(e){e=e["get"+b]();if(0<c||e>-c)e+=c;0===e&&-12==c&&(e=12);return xb(e,a,d)}}function yb(b,a){return function(c,d){var e=c["get"+b](),f=lb(a?"SHORT"+b:b);return d[f][e]}}function Yc(b){var a=(new Date(b,0,1)).getDay();return new Date(b,0,(4>=a?5:12)-a)}function Zc(b){return function(a){var c=Yc(a.getFullYear());a=+new Date(a.getFullYear(),a.getMonth(),a.getDate()+
(4-a.getDay()))-+c;a=1+Math.round(a/6048E5);return xb(a,b)}}function Tc(b){function a(a){var b;if(b=a.match(c)){a=new Date(0);var f=0,h=0,g=b[8]?a.setUTCFullYear:a.setFullYear,m=b[8]?a.setUTCHours:a.setHours;b[9]&&(f=Y(b[9]+b[10]),h=Y(b[9]+b[11]));g.call(a,Y(b[1]),Y(b[2])-1,Y(b[3]));f=Y(b[4]||0)-f;h=Y(b[5]||0)-h;g=Y(b[6]||0);b=Math.round(1E3*parseFloat("0."+(b[7]||0)));m.call(a,f,h,g,b)}return a}var c=/^(\d{4})-?(\d\d)-?(\d\d)(?:T(\d\d)(?::?(\d\d)(?::?(\d\d)(?:\.(\d+))?)?)?(Z|([+-])(\d\d):?(\d\d))?)?$/;
return function(c,e){var f="",h=[],g,m;e=e||"mediumDate";e=b.DATETIME_FORMATS[e]||e;G(c)&&(c=bf.test(c)?Y(c):a(c));Ba(c)&&(c=new Date(c));if(!da(c))return c;for(;e;)(m=cf.exec(e))?(h=h.concat(la.call(m,1)),e=h.pop()):(h.push(e),e=null);q(h,function(a){g=df[a];f+=g?g(c,b.DATETIME_FORMATS):a.replace(/(^'|'$)/g,"").replace(/''/g,"'")});return f}}function Ye(){return function(b){return sa(b,!0)}}function Ze(){return function(b,a){if(!L(b)&&!G(b))return b;a=Infinity===Math.abs(Number(a))?Number(a):Y(a);
if(G(b))return a?0<=a?b.slice(0,a):b.slice(a,b.length):"";var c=[],d,e;a>b.length?a=b.length:a<-b.length&&(a=-b.length);0<a?(d=0,e=a):(d=b.length+a,e=b.length);for(;d<e;d++)c.push(b[d]);return c}}function Vc(b){return function(a,c,d){function e(a,b){return b?function(b,c){return a(c,b)}:a}function f(a,b){var c=typeof a,d=typeof b;return c==d?(da(a)&&da(b)&&(a=a.valueOf(),b=b.valueOf()),"string"==c&&(a=a.toLowerCase(),b=b.toLowerCase()),a===b?0:a<b?-1:1):c<d?-1:1}if(!L(a)||!c)return a;c=L(c)?c:[c];
c=md(c,function(a){var c=!1,d=a||Aa;if(G(a)){if("+"==a.charAt(0)||"-"==a.charAt(0))c="-"==a.charAt(0),a=a.substring(1);d=b(a);if(d.constant){var g=d();return e(function(a,b){return f(a[g],b[g])},c)}}return e(function(a,b){return f(d(a),d(b))},c)});for(var h=[],g=0;g<a.length;g++)h.push(a[g]);return h.sort(e(function(a,b){for(var d=0;d<c.length;d++){var e=c[d](a,b);if(0!==e)return e}return 0},d))}}function wa(b){H(b)&&(b={link:b});b.restrict=b.restrict||"AC";return ba(b)}function $c(b,a,c,d){function e(a,
c){c=c?"-"+jb(c,"-"):"";d.removeClass(b,(a?zb:Ab)+c);d.addClass(b,(a?Ab:zb)+c)}var f=this,h=b.parent().controller("form")||Bb,g=0,m=f.$error={},l=[];f.$name=a.name||a.ngForm;f.$dirty=!1;f.$pristine=!0;f.$valid=!0;f.$invalid=!1;h.$addControl(f);b.addClass(Na);e(!0);f.$rollbackViewValue=function(){q(l,function(a){a.$rollbackViewValue()})};f.$commitViewValue=function(){q(l,function(a){a.$commitViewValue()})};f.$addControl=function(a){za(a.$name,"input");l.push(a);a.$name&&(f[a.$name]=a)};f.$removeControl=
function(a){a.$name&&f[a.$name]===a&&delete f[a.$name];q(m,function(b,c){f.$setValidity(c,!0,a)});Ca(l,a)};f.$setValidity=function(a,b,c){var d=m[a];if(b)d&&(Ca(d,c),d.length||(g--,g||(e(b),f.$valid=!0,f.$invalid=!1),m[a]=!1,e(!0,a),h.$setValidity(a,!0,f)));else{g||e(b);if(d){if(-1!=Pa(d,c))return}else m[a]=d=[],g++,e(!1,a),h.$setValidity(a,!1,f);d.push(c);f.$valid=!1;f.$invalid=!0}};f.$setDirty=function(){d.removeClass(b,Na);d.addClass(b,Cb);f.$dirty=!0;f.$pristine=!1;h.$setDirty()};f.$setPristine=
function(){d.removeClass(b,Cb);d.addClass(b,Na);f.$dirty=!1;f.$pristine=!0;q(l,function(a){a.$setPristine()})}}function Zb(b,a,c,d){b.$setValidity(a,c);return c?d:s}function ad(b,a){var c,d;if(a)for(c=0;c<a.length;++c)if(d=a[c],b[d])return!0;return!1}function ef(b,a,c,d,e){R(e)&&(b.$$hasNativeValidators=!0,b.$parsers.push(function(f){if(b.$error[a]||ad(e,d)||!ad(e,c))return f;b.$setValidity(a,!1)}))}function bb(b,a,c,d,e,f){var h=a.prop(ff),g=a[0].placeholder,m={};d.$$validityState=h;if(!e.android){var l=
!1;a.on("compositionstart",function(a){l=!0});a.on("compositionend",function(){l=!1;n()})}var n=function(e){if(!l){var f=a.val(),k=e&&e.type;if(T&&"input"===(e||m).type&&a[0].placeholder!==g)g=a[0].placeholder;else{c.ngTrim&&"false"===c.ngTrim||(f=$(f));var p=h&&d.$$hasNativeValidators;if(d.$viewValue!==f||""===f&&p)b.$$phase?d.$setViewValue(f,k,p):b.$apply(function(){d.$setViewValue(f,k,p)})}}};if(e.hasEvent("input"))a.on("input",n);else{var p,k=function(a){p||(p=f.defer(function(){n(a);p=null}))};
a.on("keydown",function(a){var b=a.keyCode;91===b||(15<b&&19>b||37<=b&&40>=b)||k(a)});if(e.hasEvent("paste"))a.on("paste cut",k)}a.on("change",n);d.$render=function(){a.val(d.$isEmpty(d.$viewValue)?"":d.$viewValue)}}function Db(b,a){return function(c){var d;return da(c)?c:G(c)&&(b.lastIndex=0,c=b.exec(c))?(c.shift(),d={yyyy:0,MM:1,dd:1,HH:0,mm:0},q(c,function(b,c){c<a.length&&(d[a[c]]=+b)}),new Date(d.yyyy,d.MM-1,d.dd,d.HH,d.mm)):NaN}}function cb(b,a,c,d){return function(e,f,h,g,m,l,n){bb(e,f,h,g,
m,l);g.$parsers.push(function(d){if(g.$isEmpty(d))return g.$setValidity(b,!0),null;if(a.test(d))return g.$setValidity(b,!0),c(d);g.$setValidity(b,!1);return s});g.$formatters.push(function(a){return da(a)?n("date")(a,d):""});h.min&&(e=function(a){var b=g.$isEmpty(a)||c(a)>=c(h.min);g.$setValidity("min",b);return b?a:s},g.$parsers.push(e),g.$formatters.push(e));h.max&&(e=function(a){var b=g.$isEmpty(a)||c(a)<=c(h.max);g.$setValidity("max",b);return b?a:s},g.$parsers.push(e),g.$formatters.push(e))}}
function bd(b,a,c,d,e){if(D(d)){b=b(d);if(!b.constant)throw(new S("ngModel"))("constexpr","Expected constant expression for `{0}`, but saw `{1}`.",c,d);return b(a)}return e}function $b(b,a){b="ngClass"+b;return["$animate",function(c){function d(a,b){var c=[],d=0;a:for(;d<a.length;d++){for(var e=a[d],n=0;n<b.length;n++)if(e==b[n])continue a;c.push(e)}return c}function e(a){if(!L(a)){if(G(a))return a.split(" ");if(R(a)){var b=[];q(a,function(a,c){a&&(b=b.concat(c.split(" ")))});return b}}return a}return{restrict:"AC",
link:function(f,h,g){function m(a,b){var c=h.data("$classCounts")||{},d=[];q(a,function(a){if(0<b||c[a])c[a]=(c[a]||0)+b,c[a]===+(0<b)&&d.push(a)});h.data("$classCounts",c);return d.join(" ")}function l(b){if(!0===a||f.$index%2===a){var k=e(b||[]);if(!n){var l=m(k,1);g.$addClass(l)}else if(!ra(b,n)){var q=e(n),l=d(k,q),k=d(q,k),k=m(k,-1),l=m(l,1);0===l.length?c.removeClass(h,k):0===k.length?c.addClass(h,l):c.setClass(h,l,k)}}n=ha(b)}var n;f.$watch(g[b],l,!0);g.$observe("class",function(a){l(f.$eval(g[b]))});
"ngClass"!==b&&f.$watch("$index",function(c,d){var h=c&1;if(h!==(d&1)){var l=e(f.$eval(g[b]));h===a?(h=m(l,1),g.$addClass(h)):(h=m(l,-1),g.$removeClass(h))}})}}}]}var gf=/^\/(.+)\/([a-z]*)$/,ff="validity",O=function(b){return G(b)?b.toLowerCase():b},Fb=Object.prototype.hasOwnProperty,lb=function(b){return G(b)?b.toUpperCase():b},T,B,ta,la=[].slice,uc=[].push,xa=Object.prototype.toString,Qa=S("ng"),Ra=P.angular||(P.angular={}),Ua,na,fb=0;T=Y((/msie (\d+)/.exec(O(navigator.userAgent))||[])[1]);isNaN(T)&&
(T=Y((/trident\/.*; rv:(\d+)/.exec(O(navigator.userAgent))||[])[1]));A.$inject=[];Aa.$inject=[];var L=function(){return H(Array.isArray)?Array.isArray:function(b){return"[object Array]"===xa.call(b)}}(),$=function(){return String.prototype.trim?function(b){return G(b)?b.trim():b}:function(b){return G(b)?b.replace(/^\s\s*/,"").replace(/\s\s*$/,""):b}}();na=9>T?function(b){b=b.nodeName?b:b[0];return O(b.scopeName&&"HTML"!=b.scopeName?b.scopeName+":"+b.nodeName:b.nodeName)}:function(b){return O(b.nodeName?
b.nodeName:b[0].nodeName)};var Ta=function(){if(D(Ta.isActive_))return Ta.isActive_;var b=!(!V.querySelector("[ng-csp]")&&!V.querySelector("[data-ng-csp]"));if(!b)try{new Function("")}catch(a){b=!0}return Ta.isActive_=b},ib=["ng-","data-ng-","ng:","x-ng-"],qd=/[A-Z]/g,ud={full:"1.3.0-beta.17",major:1,minor:3,dot:0,codeName:"turing-autocompletion"};Q.expando="ng339";var Xa=Q.cache={},Ke=1,ub=P.document.addEventListener?function(b,a,c){b.addEventListener(a,c,!1)}:function(b,a,c){b.attachEvent("on"+
a,c)},Wa=P.document.removeEventListener?function(b,a,c){b.removeEventListener(a,c,!1)}:function(b,a,c){b.detachEvent("on"+a,c)};Q._data=function(b){return this.cache[b[this.expando]]||{}};var Ee=/([\:\-\_]+(.))/g,Fe=/^moz([A-Z])/,Kb=S("jqLite"),Je=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,Jb=/<|&#?\w+;/,He=/<([\w:]+)/,Ie=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,ea={option:[1,'<select multiple="multiple">',"</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],
tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};ea.optgroup=ea.option;ea.tbody=ea.tfoot=ea.colgroup=ea.caption=ea.thead;ea.th=ea.td;var Ea=Q.prototype={ready:function(b){function a(){c||(c=!0,b())}var c=!1;"complete"===V.readyState?setTimeout(a):(this.on("DOMContentLoaded",a),Q(P).on("load",a))},toString:function(){var b=[];q(this,function(a){b.push(""+a)});return"["+b.join(", ")+"]"},eq:function(b){return 0<=b?B(this[b]):B(this[this.length+
b])},length:0,push:uc,sort:[].sort,splice:[].splice},sb={};q("multiple selected checked disabled readOnly required open".split(" "),function(b){sb[O(b)]=b});var yc={};q("input select option textarea button form details".split(" "),function(b){yc[b]=!0});var zc={ngMinlength:"minlength",ngMaxlength:"maxlength",ngPattern:"pattern"};q({data:Mb,removeData:ob},function(b,a){Q[a]=b});q({data:Mb,inheritedData:rb,scope:function(b){return B.data(b,"$scope")||rb(b.parentNode||b,["$isolateScope","$scope"])},
isolateScope:function(b){return B.data(b,"$isolateScope")||B.data(b,"$isolateScopeNoTemplate")},controller:vc,injector:function(b){return rb(b,"$injector")},removeAttr:function(b,a){b.removeAttribute(a)},hasClass:Nb,css:function(b,a,c){a=Va(a);if(D(c))b.style[a]=c;else{var d;8>=T&&(d=b.currentStyle&&b.currentStyle[a],""===d&&(d="auto"));d=d||b.style[a];8>=T&&(d=""===d?s:d);return d}},attr:function(b,a,c){var d=O(a);if(sb[d])if(D(c))c?(b[a]=!0,b.setAttribute(a,d)):(b[a]=!1,b.removeAttribute(d));else return b[a]||
(b.attributes.getNamedItem(a)||A).specified?d:s;else if(D(c))b.setAttribute(a,c);else if(b.getAttribute)return b=b.getAttribute(a,2),null===b?s:b},prop:function(b,a,c){if(D(c))b[a]=c;else return b[a]},text:function(){function b(a,b){if(F(b)){var d=a.nodeType;return 1===d||3===d?a.textContent:""}a.textContent=b}b.$dv="";return b}(),val:function(b,a){if(F(a)){if(b.multiple&&"select"===na(b)){var c=[];q(b.options,function(a){a.selected&&c.push(a.value||a.text)});return 0===c.length?null:c}return b.value}b.value=
a},html:function(b,a){if(F(a))return b.innerHTML;nb(b,!0);b.innerHTML=a},empty:wc},function(b,a){Q.prototype[a]=function(a,d){var e,f,h=this.length;if(b!==wc&&(2==b.length&&b!==Nb&&b!==vc?a:d)===s){if(R(a)){for(e=0;e<h;e++)if(b===Mb)b(this[e],a);else for(f in a)b(this[e],f,a[f]);return this}e=b.$dv;h=e===s?Math.min(h,1):h;for(f=0;f<h;f++){var g=b(this[f],a,d);e=e?e+g:g}return e}for(e=0;e<h;e++)b(this[e],a,d);return this}});q({removeData:ob,on:function a(c,d,e,f){if(D(f))throw Kb("onargs");if(!c.nodeType||
1===c.nodeType||9===c.nodeType){var h=ma(c,"events"),g=ma(c,"handle");h||ma(c,"events",h={});g||ma(c,"handle",g=Me(c,h));q(d.split(" "),function(d){var f=h[d];if(!f){if("mouseenter"==d||"mouseleave"==d){var n=V.body.contains||V.body.compareDocumentPosition?function(a,c){var d=9===a.nodeType?a.documentElement:a,e=c&&c.parentNode;return a===e||!!(e&&1===e.nodeType&&(d.contains?d.contains(e):a.compareDocumentPosition&&a.compareDocumentPosition(e)&16))}:function(a,c){if(c)for(;c=c.parentNode;)if(c===
a)return!0;return!1};h[d]=[];a(c,{mouseleave:"mouseout",mouseenter:"mouseover"}[d],function(a){var c=a.relatedTarget;c&&(c===this||n(this,c))||g(a,d)})}else ub(c,d,g),h[d]=[];f=h[d]}f.push(e)})}},off:tc,one:function(a,c,d){a=B(a);a.on(c,function f(){a.off(c,d);a.off(c,f)});a.on(c,d)},replaceWith:function(a,c){var d,e=a.parentNode;nb(a);q(new Q(c),function(c){d?e.insertBefore(c,d.nextSibling):e.replaceChild(c,a);d=c})},children:function(a){var c=[];q(a.childNodes,function(a){1===a.nodeType&&c.push(a)});
return c},contents:function(a){return a.contentDocument||a.childNodes||[]},append:function(a,c){q(new Q(c),function(c){1!==a.nodeType&&11!==a.nodeType||a.appendChild(c)})},prepend:function(a,c){if(1===a.nodeType){var d=a.firstChild;q(new Q(c),function(c){a.insertBefore(c,d)})}},wrap:function(a,c){c=B(c)[0];var d=a.parentNode;d&&d.replaceChild(c,a);c.appendChild(a)},remove:function(a){nb(a);var c=a.parentNode;c&&c.removeChild(a)},after:function(a,c){var d=a,e=a.parentNode;q(new Q(c),function(a){e.insertBefore(a,
d.nextSibling);d=a})},addClass:qb,removeClass:pb,toggleClass:function(a,c,d){c&&q(c.split(" "),function(c){var f=d;F(f)&&(f=!Nb(a,c));(f?qb:pb)(a,c)})},parent:function(a){return(a=a.parentNode)&&11!==a.nodeType?a:null},next:function(a){if(a.nextElementSibling)return a.nextElementSibling;for(a=a.nextSibling;null!=a&&1!==a.nodeType;)a=a.nextSibling;return a},find:function(a,c){return a.getElementsByTagName?a.getElementsByTagName(c):[]},clone:Lb,triggerHandler:function(a,c,d){c=(ma(a,"events")||{})[c];
c=ha(c||[]);d=d||[];var e=[{preventDefault:function(){this.defaultPrevented=!0},isDefaultPrevented:function(){return!0===this.defaultPrevented},stopPropagation:A}];q(c,function(c){c.apply(a,e.concat(d))})}},function(a,c){Q.prototype[c]=function(c,e,f){for(var h,g=0;g<this.length;g++)F(h)?(h=a(this[g],c,e,f),D(h)&&(h=B(h))):sc(h,a(this[g],c,e,f));return D(h)?h:this};Q.prototype.bind=Q.prototype.on;Q.prototype.unbind=Q.prototype.off});Ya.prototype={put:function(a,c){this[Fa(a,this.nextUid)]=c},get:function(a){return this[Fa(a,
this.nextUid)]},remove:function(a){var c=this[a=Fa(a,this.nextUid)];delete this[a];return c}};var Bc=/^function\s*[^\(]*\(\s*([^\)]*)\)/m,Oe=/,/,Pe=/^\s*(_?)(\S+?)\1\s*$/,Ac=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg,Ga=S("$injector");Hb.$$annotate=Ob;var hf=S("$animate"),ge=["$provide",function(a){this.$$selectors={};this.register=function(c,d){var e=c+"-animation";if(c&&"."!=c.charAt(0))throw hf("notcsel",c);this.$$selectors[c.substr(1)]=e;a.factory(e,d)};this.classNameFilter=function(a){1===arguments.length&&
(this.$$classNameFilter=a instanceof RegExp?a:null);return this.$$classNameFilter};this.$get=["$timeout","$$asyncCallback",function(a,d){return{enter:function(a,c,h,g){h?h.after(a):c.prepend(a);g&&d(g);return A},leave:function(a,c){a.remove();c&&d(c);return A},move:function(a,c,d,g){return this.enter(a,c,d,g)},addClass:function(a,c,h){c=G(c)?c:L(c)?c.join(" "):"";q(a,function(a){qb(a,c)});h&&d(h);return A},removeClass:function(a,c,h){c=G(c)?c:L(c)?c.join(" "):"";q(a,function(a){pb(a,c)});h&&d(h);
return A},setClass:function(a,c,h,g){q(a,function(a){qb(a,c);pb(a,h)});g&&d(g);return A},enabled:A}}]}],ja=S("$compile");kc.$inject=["$provide","$$sanitizeUriProvider"];var Se=/^(x[\:\-_]|data[\:\-_])/i,Rb=S("$interpolate"),jf=/^([^\?#]*)(\?([^#]*))?(#(.*))?$/,Ve={http:80,https:443,ftp:21},Ub=S("$location");Wb.prototype=Vb.prototype=Lc.prototype={$$html5:!1,$$replace:!1,absUrl:vb("$$absUrl"),url:function(a,c){if(F(a))return this.$$url;var d=jf.exec(a);d[1]&&this.path(decodeURIComponent(d[1]));(d[2]||
d[1])&&this.search(d[3]||"");this.hash(d[5]||"",c);return this},protocol:vb("$$protocol"),host:vb("$$host"),port:vb("$$port"),path:Mc("$$path",function(a){return"/"==a.charAt(0)?a:"/"+a}),search:function(a,c){switch(arguments.length){case 0:return this.$$search;case 1:if(G(a))this.$$search=hc(a);else if(R(a))q(a,function(c,e){null==c&&delete a[e]}),this.$$search=a;else throw Ub("isrcharg");break;default:F(c)||null===c?delete this.$$search[a]:this.$$search[a]=c}this.$$compose();return this},hash:Mc("$$hash",
Aa),replace:function(){this.$$replace=!0;return this}};var ka=S("$parse"),kf=Function.prototype.call,lf=Function.prototype.apply,mf=Function.prototype.bind,db={"null":function(){return null},"true":function(){return!0},"false":function(){return!1},undefined:A,"+":function(a,c,d,e){d=d(a,c);e=e(a,c);return D(d)?D(e)?d+e:d:D(e)?e:s},"-":function(a,c,d,e){d=d(a,c);e=e(a,c);return(D(d)?d:0)-(D(e)?e:0)},"*":function(a,c,d,e){return d(a,c)*e(a,c)},"/":function(a,c,d,e){return d(a,c)/e(a,c)},"%":function(a,
c,d,e){return d(a,c)%e(a,c)},"^":function(a,c,d,e){return d(a,c)^e(a,c)},"=":A,"===":function(a,c,d,e){return d(a,c)===e(a,c)},"!==":function(a,c,d,e){return d(a,c)!==e(a,c)},"==":function(a,c,d,e){return d(a,c)==e(a,c)},"!=":function(a,c,d,e){return d(a,c)!=e(a,c)},"<":function(a,c,d,e){return d(a,c)<e(a,c)},">":function(a,c,d,e){return d(a,c)>e(a,c)},"<=":function(a,c,d,e){return d(a,c)<=e(a,c)},">=":function(a,c,d,e){return d(a,c)>=e(a,c)},"&&":function(a,c,d,e){return d(a,c)&&e(a,c)},"||":function(a,
c,d,e){return d(a,c)||e(a,c)},"&":function(a,c,d,e){return d(a,c)&e(a,c)},"|":function(a,c,d,e){return e(a,c)(a,c,d(a,c))},"!":function(a,c,d){return!d(a,c)}},nf={n:"\n",f:"\f",r:"\r",t:"\t",v:"\v","'":"'",'"':'"'},Yb=function(a){this.options=a};Yb.prototype={constructor:Yb,lex:function(a){this.text=a;this.index=0;this.ch=s;for(this.tokens=[];this.index<this.text.length;)if(this.ch=this.text.charAt(this.index),this.is("\"'"))this.readString(this.ch);else if(this.isNumber(this.ch)||this.is(".")&&this.isNumber(this.peek()))this.readNumber();
else if(this.isIdent(this.ch))this.readIdent();else if(this.is("(){}[].,;:?"))this.tokens.push({index:this.index,text:this.ch}),this.index++;else if(this.isWhitespace(this.ch))this.index++;else{a=this.ch+this.peek();var c=a+this.peek(2),d=db[this.ch],e=db[a],f=db[c];f?(this.tokens.push({index:this.index,text:c,fn:f}),this.index+=3):e?(this.tokens.push({index:this.index,text:a,fn:e}),this.index+=2):d?(this.tokens.push({index:this.index,text:this.ch,fn:d}),this.index+=1):this.throwError("Unexpected next character ",
this.index,this.index+1)}return this.tokens},is:function(a){return-1!==a.indexOf(this.ch)},peek:function(a){a=a||1;return this.index+a<this.text.length?this.text.charAt(this.index+a):!1},isNumber:function(a){return"0"<=a&&"9">=a},isWhitespace:function(a){return" "===a||"\r"===a||"\t"===a||"\n"===a||"\v"===a||"\u00a0"===a},isIdent:function(a){return"a"<=a&&"z">=a||"A"<=a&&"Z">=a||"_"===a||"$"===a},isExpOperator:function(a){return"-"===a||"+"===a||this.isNumber(a)},throwError:function(a,c,d){d=d||this.index;
c=D(c)?"s "+c+"-"+this.index+" ["+this.text.substring(c,d)+"]":" "+d;throw ka("lexerr",a,c,this.text);},readNumber:function(){for(var a="",c=this.index;this.index<this.text.length;){var d=O(this.text.charAt(this.index));if("."==d||this.isNumber(d))a+=d;else{var e=this.peek();if("e"==d&&this.isExpOperator(e))a+=d;else if(this.isExpOperator(d)&&e&&this.isNumber(e)&&"e"==a.charAt(a.length-1))a+=d;else if(!this.isExpOperator(d)||e&&this.isNumber(e)||"e"!=a.charAt(a.length-1))break;else this.throwError("Invalid exponent")}this.index++}a*=
1;this.tokens.push({index:c,text:a,constant:!0,fn:function(){return a}})},readIdent:function(){for(var a=this,c="",d=this.index,e,f,h,g;this.index<this.text.length;){g=this.text.charAt(this.index);if("."===g||this.isIdent(g)||this.isNumber(g))"."===g&&(e=this.index),c+=g;else break;this.index++}if(e)for(f=this.index;f<this.text.length;){g=this.text.charAt(f);if("("===g){h=c.substr(e-d+1);c=c.substr(0,e-d);this.index=f;break}if(this.isWhitespace(g))f++;else break}d={index:d,text:c};if(db.hasOwnProperty(c))d.fn=
db[c],d.constant=!0;else{var m=Oc(c,this.options,this.text);d.fn=C(function(a,c){return m(a,c)},{assign:function(d,e){return wb(d,c,e,a.text)}})}this.tokens.push(d);h&&(this.tokens.push({index:e,text:"."}),this.tokens.push({index:e+1,text:h}))},readString:function(a){var c=this.index;this.index++;for(var d="",e=a,f=!1;this.index<this.text.length;){var h=this.text.charAt(this.index),e=e+h;if(f)"u"===h?(f=this.text.substring(this.index+1,this.index+5),f.match(/[\da-f]{4}/i)||this.throwError("Invalid unicode escape [\\u"+
f+"]"),this.index+=4,d+=String.fromCharCode(parseInt(f,16))):d+=nf[h]||h,f=!1;else if("\\"===h)f=!0;else{if(h===a){this.index++;this.tokens.push({index:c,text:e,string:d,constant:!0,fn:function(){return d}});return}d+=h}this.index++}this.throwError("Unterminated quote",c)}};var ab=function(a,c,d){this.lexer=a;this.$filter=c;this.options=d};ab.ZERO=C(function(){return 0},{constant:!0});ab.prototype={constructor:ab,parse:function(a){this.text=a;this.tokens=this.lexer.lex(a);a=this.statements();0!==
this.tokens.length&&this.throwError("is an unexpected token",this.tokens[0]);a.literal=!!a.literal;a.constant=!!a.constant;return a},primary:function(){var a;if(this.expect("("))a=this.filterChain(),this.consume(")");else if(this.expect("["))a=this.arrayDeclaration();else if(this.expect("{"))a=this.object();else{var c=this.expect();(a=c.fn)||this.throwError("not a primary expression",c);c.constant&&(a.constant=!0,a.literal=!0)}for(var d;c=this.expect("(","[",".");)"("===c.text?(a=this.functionCall(a,
d),d=null):"["===c.text?(d=a,a=this.objectIndex(a)):"."===c.text?(d=a,a=this.fieldAccess(a)):this.throwError("IMPOSSIBLE");return a},throwError:function(a,c){throw ka("syntax",c.text,a,c.index+1,this.text,this.text.substring(c.index));},peekToken:function(){if(0===this.tokens.length)throw ka("ueoe",this.text);return this.tokens[0]},peek:function(a,c,d,e){if(0<this.tokens.length){var f=this.tokens[0],h=f.text;if(h===a||h===c||h===d||h===e||!(a||c||d||e))return f}return!1},expect:function(a,c,d,e){return(a=
this.peek(a,c,d,e))?(this.tokens.shift(),a):!1},consume:function(a){this.expect(a)||this.throwError("is unexpected, expecting ["+a+"]",this.peek())},unaryFn:function(a,c){return C(function(d,e){return a(d,e,c)},{constant:c.constant})},ternaryFn:function(a,c,d){return C(function(e,f){return a(e,f)?c(e,f):d(e,f)},{constant:a.constant&&c.constant&&d.constant})},binaryFn:function(a,c,d){return C(function(e,f){return c(e,f,a,d)},{constant:a.constant&&d.constant})},statements:function(){for(var a=[];;)if(0<
this.tokens.length&&!this.peek("}",")",";","]")&&a.push(this.filterChain()),!this.expect(";"))return 1===a.length?a[0]:function(c,d){for(var e,f=0;f<a.length;f++){var h=a[f];h&&(e=h(c,d))}return e}},filterChain:function(){for(var a=this.expression(),c;;)if(c=this.expect("|"))a=this.binaryFn(a,c.fn,this.filter());else return a},filter:function(){for(var a=this.expect(),c=this.$filter(a.text),d=[];this.expect(":");)d.push(this.expression());return ba(function(a,f,h){h=[h];for(var g=0;g<d.length;g++)h.push(d[g](a,
f));return c.apply(a,h)})},expression:function(){return this.assignment()},assignment:function(){var a=this.ternary(),c,d;return(d=this.expect("="))?(a.assign||this.throwError("implies assignment but ["+this.text.substring(0,d.index)+"] can not be assigned to",d),c=this.ternary(),function(d,f){return a.assign(d,c(d,f),f)}):a},ternary:function(){var a=this.logicalOR(),c,d;if(this.expect("?")){c=this.ternary();if(d=this.expect(":"))return this.ternaryFn(a,c,this.ternary());this.throwError("expected :",
d)}else return a},logicalOR:function(){for(var a=this.logicalAND(),c;;)if(c=this.expect("||"))a=this.binaryFn(a,c.fn,this.logicalAND());else return a},logicalAND:function(){var a=this.equality(),c;if(c=this.expect("&&"))a=this.binaryFn(a,c.fn,this.logicalAND());return a},equality:function(){var a=this.relational(),c;if(c=this.expect("==","!=","===","!=="))a=this.binaryFn(a,c.fn,this.equality());return a},relational:function(){var a=this.additive(),c;if(c=this.expect("<",">","<=",">="))a=this.binaryFn(a,
c.fn,this.relational());return a},additive:function(){for(var a=this.multiplicative(),c;c=this.expect("+","-");)a=this.binaryFn(a,c.fn,this.multiplicative());return a},multiplicative:function(){for(var a=this.unary(),c;c=this.expect("*","/","%");)a=this.binaryFn(a,c.fn,this.unary());return a},unary:function(){var a;return this.expect("+")?this.primary():(a=this.expect("-"))?this.binaryFn(ab.ZERO,a.fn,this.unary()):(a=this.expect("!"))?this.unaryFn(a.fn,this.unary()):this.primary()},fieldAccess:function(a){var c=
this,d=this.expect().text,e=Oc(d,this.options,this.text);return C(function(c,d,g){return e(g||a(c,d))},{assign:function(e,h,g){return wb(a(e,g),d,h,c.text)}})},objectIndex:function(a){var c=this,d=this.expression();this.consume("]");return C(function(e,f){var h=a(e,f),g=d(e,f);qa(g,c.text);return h?Ma(h[g],c.text):s},{assign:function(e,f,h){var g=d(e,h);return Ma(a(e,h),c.text)[g]=f}})},functionCall:function(a,c){var d=[];if(")"!==this.peekToken().text){do d.push(this.expression());while(this.expect(","))
}this.consume(")");var e=this;return function(f,h){for(var g=[],m=c?c(f,h):f,l=0;l<d.length;l++)g.push(d[l](f,h));l=a(f,h,m)||A;Ma(m,e.text);var n=e.text;if(l){if(l.constructor===l)throw ka("isecfn",n);if(l===kf||l===lf||l===mf)throw ka("isecff",n);}g=l.apply?l.apply(m,g):l(g[0],g[1],g[2],g[3],g[4]);return Ma(g,e.text)}},arrayDeclaration:function(){var a=[],c=!0;if("]"!==this.peekToken().text){do{if(this.peek("]"))break;var d=this.expression();a.push(d);d.constant||(c=!1)}while(this.expect(","))}this.consume("]");
return C(function(c,d){for(var h=[],g=0;g<a.length;g++)h.push(a[g](c,d));return h},{literal:!0,constant:c})},object:function(){var a=[],c=!0;if("}"!==this.peekToken().text){do{if(this.peek("}"))break;var d=this.expect(),d=d.string||d.text;this.consume(":");var e=this.expression();a.push({key:d,value:e});e.constant||(c=!1)}while(this.expect(","))}this.consume("}");return C(function(c,d){for(var e={},m=0;m<a.length;m++){var l=a[m];e[l.key]=l.value(c,d)}return e},{literal:!0,constant:c})}};var Xb={},
va=S("$sce"),ga={HTML:"html",CSS:"css",URL:"url",RESOURCE_URL:"resourceUrl",JS:"js"},Z=V.createElement("a"),Rc=ua(P.location.href,!0);rc.$inject=["$provide"];Sc.$inject=["$locale"];Uc.$inject=["$locale"];var Xc=".",df={yyyy:aa("FullYear",4),yy:aa("FullYear",2,0,!0),y:aa("FullYear",1),MMMM:yb("Month"),MMM:yb("Month",!0),MM:aa("Month",2,1),M:aa("Month",1,1),dd:aa("Date",2),d:aa("Date",1),HH:aa("Hours",2),H:aa("Hours",1),hh:aa("Hours",2,-12),h:aa("Hours",1,-12),mm:aa("Minutes",2),m:aa("Minutes",1),ss:aa("Seconds",
2),s:aa("Seconds",1),sss:aa("Milliseconds",3),EEEE:yb("Day"),EEE:yb("Day",!0),a:function(a,c){return 12>a.getHours()?c.AMPMS[0]:c.AMPMS[1]},Z:function(a){a=-1*a.getTimezoneOffset();return a=(0<=a?"+":"")+(xb(Math[0<a?"floor":"ceil"](a/60),2)+xb(Math.abs(a%60),2))},ww:Zc(2),w:Zc(1)},cf=/((?:[^yMdHhmsaZEw']+)|(?:'(?:[^']|'')*')|(?:E+|y+|M+|d+|H+|h+|m+|s+|a|Z|w+))(.*)/,bf=/^\-?\d+$/;Tc.$inject=["$locale"];var $e=ba(O),af=ba(lb);Vc.$inject=["$parse"];var xd=ba({restrict:"E",compile:function(a,c){8>=T&&
(c.href||c.name||c.$set("href",""),a.append(V.createComment("IE fix")));if(!c.href&&!c.xlinkHref&&!c.name)return function(a,c){var f="[object SVGAnimatedString]"===xa.call(c.prop("href"))?"xlink:href":"href";c.on("click",function(a){c.attr(f)||a.preventDefault()})}}}),mb={};q(sb,function(a,c){if("multiple"!=a){var d=oa("ng-"+c);mb[d]=function(){return{restrict:"A",priority:100,link:function(a,f,h){a.$watch(h[d],function(a){h.$set(c,!!a)})}}}}});q(zc,function(a,c){mb[c]=function(){return{priority:100,
link:function(a,e,f){if("ngPattern"===c&&"/"==f.ngPattern.charAt(0)&&(e=f.ngPattern.match(gf))){f.$set("ngPattern",RegExp(e[1],e[2]));return}a.$watch(f[c],function(a){f.$set(c,a)})}}}});q(["src","srcset","href"],function(a){var c=oa("ng-"+a);mb[c]=function(){return{priority:99,link:function(d,e,f){var h=a,g=a;"href"===a&&"[object SVGAnimatedString]"===xa.call(e.prop("href"))&&(g="xlinkHref",f.$attr[g]="xlink:href",h=null);f.$observe(c,function(c){c?(f.$set(g,c),T&&h&&e.prop(h,f[g])):"href"===a&&f.$set(g,
null)})}}}});var Bb={$addControl:A,$removeControl:A,$setValidity:A,$setDirty:A,$setPristine:A};$c.$inject=["$element","$attrs","$scope","$animate"];var cd=function(a){return["$timeout",function(c){return{name:"form",restrict:a?"EAC":"E",controller:$c,compile:function(){return{pre:function(a,e,f,h){if(!f.action){var g=function(c){a.$apply(function(){h.$commitViewValue()});c.preventDefault?c.preventDefault():c.returnValue=!1};ub(e[0],"submit",g);e.on("$destroy",function(){c(function(){Wa(e[0],"submit",
g)},0,!1)})}var m=e.parent().controller("form"),l=f.name||f.ngForm;l&&wb(a,l,h,l);if(m)e.on("$destroy",function(){m.$removeControl(h);l&&wb(a,l,s,l);C(h,Bb)})}}}}}]},yd=cd(),Ld=cd(!0),of=/^(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?$/,pf=/^[a-z0-9!#$%&'*+\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i,qf=/^\s*(\-|\+)?(\d+|(\d*(\.\d*)))\s*$/,dd=/^(\d{4})-(\d{2})-(\d{2})$/,ed=/^(\d{4})-(\d\d)-(\d\d)T(\d\d):(\d\d)$/,ac=/^(\d{4})-W(\d\d)$/,
fd=/^(\d{4})-(\d\d)$/,gd=/^(\d\d):(\d\d)$/,rf=/(\s+|^)default(\s+|$)/,hd={text:bb,date:cb("date",dd,Db(dd,["yyyy","MM","dd"]),"yyyy-MM-dd"),"datetime-local":cb("datetimelocal",ed,Db(ed,["yyyy","MM","dd","HH","mm"]),"yyyy-MM-ddTHH:mm"),time:cb("time",gd,Db(gd,["HH","mm"]),"HH:mm"),week:cb("week",ac,function(a){if(da(a))return a;if(G(a)){ac.lastIndex=0;var c=ac.exec(a);if(c){a=+c[1];var d=+c[2],c=Yc(a),d=7*(d-1);return new Date(a,0,c.getDate()+d)}}return NaN},"yyyy-Www"),month:cb("month",fd,Db(fd,["yyyy",
"MM"]),"yyyy-MM"),number:function(a,c,d,e,f,h){bb(a,c,d,e,f,h);e.$parsers.push(function(a){var c=e.$isEmpty(a);if(c||qf.test(a))return e.$setValidity("number",!0),""===a?null:c?a:parseFloat(a);e.$setValidity("number",!1);return s});ef(e,"number",sf,null,e.$$validityState);e.$formatters.push(function(a){return e.$isEmpty(a)?"":""+a});d.min&&(a=function(a){var c=parseFloat(d.min);return Zb(e,"min",e.$isEmpty(a)||a>=c,a)},e.$parsers.push(a),e.$formatters.push(a));d.max&&(a=function(a){var c=parseFloat(d.max);
return Zb(e,"max",e.$isEmpty(a)||a<=c,a)},e.$parsers.push(a),e.$formatters.push(a));e.$formatters.push(function(a){return Zb(e,"number",e.$isEmpty(a)||Ba(a),a)})},url:function(a,c,d,e,f,h){bb(a,c,d,e,f,h);e.$validators.url=function(a,c){var d=a||c;return e.$isEmpty(d)||of.test(d)}},email:function(a,c,d,e,f,h){bb(a,c,d,e,f,h);e.$validators.email=function(a,c){var d=a||c;return e.$isEmpty(d)||pf.test(d)}},radio:function(a,c,d,e){F(d.name)&&c.attr("name",++fb);c.on("click",function(f){c[0].checked&&
a.$apply(function(){e.$setViewValue(d.value,f&&f.type)})});e.$render=function(){c[0].checked=d.value==e.$viewValue};d.$observe("value",e.$render)},checkbox:function(a,c,d,e,f,h,g,m){var l=bd(m,a,"ngTrueValue",d.ngTrueValue,!0),n=bd(m,a,"ngFalseValue",d.ngFalseValue,!1);c.on("click",function(d){a.$apply(function(){e.$setViewValue(c[0].checked,d&&d.type)})});e.$render=function(){c[0].checked=e.$viewValue};e.$isEmpty=function(a){return a!==l};e.$formatters.push(function(a){return ra(a,l)});e.$parsers.push(function(a){return a?
l:n})},hidden:A,button:A,submit:A,reset:A,file:A},sf=["badInput"],lc=["$browser","$sniffer","$filter","$parse",function(a,c,d,e){return{restrict:"E",require:["?ngModel"],link:function(f,h,g,m){m[0]&&(hd[O(g.type)]||hd.text)(f,h,g,m[0],c,a,d,e)}}}],Ab="ng-valid",zb="ng-invalid",Na="ng-pristine",Cb="ng-dirty",tf=["$scope","$exceptionHandler","$attrs","$element","$parse","$animate","$timeout",function(a,c,d,e,f,h,g){function m(a,c){c=c?"-"+jb(c,"-"):"";h.removeClass(e,(a?zb:Ab)+c);h.addClass(e,(a?Ab:
zb)+c)}this.$modelValue=this.$viewValue=Number.NaN;this.$validators={};this.$parsers=[];this.$formatters=[];this.$viewChangeListeners=[];this.$untouched=!0;this.$touched=!1;this.$pristine=!0;this.$dirty=!1;this.$valid=!0;this.$invalid=!1;this.$name=d.name;var l=f(d.ngModel),n=l.assign,p=null,k=this;if(!n)throw S("ngModel")("nonassign",d.ngModel,ia(e));this.$render=A;this.$isEmpty=function(a){return F(a)||""===a||null===a||a!==a};var t=e.inheritedData("$formController")||Bb,u=0,K=this.$error={};e.addClass(Na).addClass("ng-untouched");
m(!0);this.$setValidity=function(a,c){K[a]!==!c&&(c?(K[a]&&u--,u||(m(!0),k.$valid=!0,k.$invalid=!1)):(m(!1),k.$invalid=!0,k.$valid=!1,u++),K[a]=!c,m(c,a),t.$setValidity(a,c,k))};this.$setPristine=function(){k.$dirty=!1;k.$pristine=!0;h.removeClass(e,Cb);h.addClass(e,Na)};this.$setUntouched=function(){k.$touched=!1;k.$untouched=!0;h.setClass(e,"ng-untouched","ng-touched")};this.$setTouched=function(){k.$touched=!0;k.$untouched=!1;h.setClass(e,"ng-touched","ng-untouched")};this.$rollbackViewValue=function(){g.cancel(p);
k.$viewValue=k.$$lastCommittedViewValue;k.$render()};this.$validate=function(){if(k.$modelValue===k.$modelValue){var a=k.$modelValue;k.$$runValidators(k.$$invalidModelValue||k.$modelValue,k.$viewValue);a!==k.$modelValue&&k.$$writeModelToScope()}};this.$$runValidators=function(a,c){q(k.$validators,function(d,e){k.$setValidity(e,d(a,c))});k.$modelValue=k.$valid?a:s;k.$$invalidModelValue=k.$valid?s:a};this.$commitViewValue=function(a){var c=k.$viewValue;g.cancel(p);if(a||k.$$lastCommittedViewValue!==
c){k.$$lastCommittedViewValue=c;k.$pristine&&(k.$dirty=!0,k.$pristine=!1,h.removeClass(e,Na),h.addClass(e,Cb),t.$setDirty());var d=c;q(k.$parsers,function(a){d=a(d)});k.$modelValue===d||!F(k.$$invalidModelValue)&&k.$$invalidModelValue==d||(k.$$runValidators(d,c),k.$$writeModelToScope())}};this.$$writeModelToScope=function(){var d;k.$options&&k.$options.getterSetter&&H(d=l(a))?d(k.$modelValue):n(a,k.$modelValue);q(k.$viewChangeListeners,function(a){try{a()}catch(d){c(d)}})};this.$setViewValue=function(a,
c,d){k.$viewValue=a;k.$options&&!k.$options.updateOnDefault||k.$$debounceViewValueCommit(c,d)};this.$$debounceViewValueCommit=function(a,c){var d=0,e=k.$options;e&&D(e.debounce)&&(e=e.debounce,Ba(e)?d=e:Ba(e[a])?d=e[a]:Ba(e["default"])&&(d=e["default"]));g.cancel(p);d?p=g(function(){k.$commitViewValue(c)},d):k.$commitViewValue(c)};a.$watch(function(){var c=l(a);k.$options&&(k.$options.getterSetter&&H(c))&&(c=c());if(k.$modelValue!==c&&(F(k.$$invalidModelValue)||k.$$invalidModelValue!=c)){for(var d=
k.$formatters,e=d.length,f=c;e--;)f=d[e](f);k.$$runValidators(c,f);k.$viewValue!==f&&(k.$viewValue=k.$$lastCommittedViewValue=f,k.$render())}return c})}],$d=function(){return{restrict:"A",require:["ngModel","^?form","^?ngModelOptions"],controller:tf,link:{pre:function(a,c,d,e){e[2]&&(e[0].$options=e[2].$options);var f=e[0],h=e[1]||Bb;h.$addControl(f);a.$on("$destroy",function(){h.$removeControl(f)})},post:function(a,c,d,e){var f=e[0];if(f.$options&&f.$options.updateOn)c.on(f.$options.updateOn,function(c){a.$apply(function(){f.$$debounceViewValueCommit(c&&
c.type)})});c.on("blur",function(c){a.$apply(function(){f.$setTouched()})})}}}},be=ba({restrict:"A",require:"ngModel",link:function(a,c,d,e){e.$viewChangeListeners.push(function(){a.$eval(d.ngChange)})}}),nc=function(){return{restrict:"A",require:"?ngModel",link:function(a,c,d,e){e&&(d.required=!0,e.$validators.required=function(a,c){return!d.required||!e.$isEmpty(c)},d.$observe("required",function(){e.$validate()}))}}},mc=function(){return{restrict:"A",require:"?ngModel",link:function(a,c,d,e){if(e){var f,
h=d.ngPattern||d.pattern;d.$observe("pattern",function(a){G(a)&&0<a.length&&(a=RegExp(a));if(a&&!a.test)throw S("ngPattern")("noregexp",h,a,ia(c));f=a||s;e.$validate()});e.$validators.pattern=function(a){return e.$isEmpty(a)||F(f)||f.test(a)}}}}},pc=function(){return{restrict:"A",require:"?ngModel",link:function(a,c,d,e){if(e){var f=0;d.$observe("maxlength",function(a){f=Y(a)||0;e.$validate()});e.$validators.maxlength=function(a){return e.$isEmpty(a)||a.length<=f}}}}},oc=function(){return{restrict:"A",
require:"?ngModel",link:function(a,c,d,e){if(e){var f=0;d.$observe("minlength",function(a){f=Y(a)||0;e.$validate()});e.$validators.minlength=function(a){return e.$isEmpty(a)||a.length>=f}}}}},ae=function(){return{restrict:"A",require:"ngModel",link:function(a,c,d,e){var f=c.attr(d.$attr.ngList)||", ",h="false"!==d.ngTrim,g=h?$(f):f;e.$parsers.push(function(a){if(!F(a)){var c=[];a&&q(a.split(g),function(a){a&&c.push(h?$(a):a)});return c}});e.$formatters.push(function(a){return L(a)?a.join(f):s});e.$isEmpty=
function(a){return!a||!a.length}}}},uf=/^(true|false|\d+)$/,ce=function(){return{restrict:"A",priority:100,compile:function(a,c){return uf.test(c.ngValue)?function(a,c,f){f.$set("value",a.$eval(f.ngValue))}:function(a,c,f){a.$watch(f.ngValue,function(a){f.$set("value",a)})}}}},de=function(){return{restrict:"A",controller:["$scope","$attrs",function(a,c){var d=this;this.$options=a.$eval(c.ngModelOptions);this.$options.updateOn!==s?(this.$options.updateOnDefault=!1,this.$options.updateOn=$(this.$options.updateOn.replace(rf,
function(){d.$options.updateOnDefault=!0;return" "}))):this.$options.updateOnDefault=!0}]}},Dd=wa({compile:function(a){a.addClass("ng-binding");return function(a,d,e){d.data("$binding",e.ngBind);a.$watch(e.ngBind,function(a){d.text(a==s?"":a)})}}}),Fd=["$interpolate",function(a){return function(c,d,e){c=a(d.attr(e.$attr.ngBindTemplate));d.addClass("ng-binding").data("$binding",c);e.$observe("ngBindTemplate",function(a){d.text(a)})}}],Ed=["$sce","$parse",function(a,c){return{restrict:"A",compile:function(d,
e){d.addClass("ng-binding");return function(d,e,g){e.data("$binding",g.ngBindHtml);var m=c(g.ngBindHtml);g=c(g.ngBindHtml,function(a){return(a||"").toString()});d.$watch(g,function(){e.html(a.getTrustedHtml(m(d))||"")})}}}}],Gd=$b("",!0),Id=$b("Odd",0),Hd=$b("Even",1),Jd=wa({compile:function(a,c){c.$set("ngCloak",s);a.removeClass("ng-cloak")}}),Kd=[function(){return{restrict:"A",scope:!0,controller:"@",priority:500}}],qc={};q("click dblclick mousedown mouseup mouseover mouseout mousemove mouseenter mouseleave keydown keyup keypress submit focus blur copy cut paste".split(" "),
function(a){var c=oa("ng-"+a);qc[c]=["$parse",function(d){return{restrict:"A",compile:function(e,f){var h=d(f[c]);return function(c,d){d.on(O(a),function(a){c.$apply(function(){h(c,{$event:a})})})}}}}]});var Nd=["$animate",function(a){return{multiElement:!0,transclude:"element",priority:600,terminal:!0,restrict:"A",$$tlb:!0,link:function(c,d,e,f,h){var g,m,l;c.$watch(e.ngIf,function(c){c?m||h(function(c,f){m=f;c[c.length++]=V.createComment(" end ngIf: "+e.ngIf+" ");g={clone:c};a.enter(c,d.parent(),
d)}):(l&&(l.remove(),l=null),m&&(m.$destroy(),m=null),g&&(l=kb(g.clone),a.leave(l,function(){l=null}),g=null))})}}}],Od=["$http","$templateCache","$anchorScroll","$animate","$sce",function(a,c,d,e,f){return{restrict:"ECA",priority:400,terminal:!0,transclude:"element",controller:Ra.noop,compile:function(h,g){var m=g.ngInclude||g.src,l=g.onload||"",n=g.autoscroll;return function(g,h,q,u,K){var w=0,y,v,x,r=function(){v&&(v.remove(),v=null);y&&(y.$destroy(),y=null);x&&(e.leave(x,function(){v=null}),v=
x,x=null)};g.$watch(f.parseAsResourceUrl(m),function(f){var m=function(){!D(n)||n&&!g.$eval(n)||d()},q=++w;f?(a.get(f,{cache:c}).success(function(a){if(q===w){var c=g.$new();u.template=a;a=K(c,function(a){r();e.enter(a,null,h,m)});y=c;x=a;y.$emit("$includeContentLoaded");g.$eval(l)}}).error(function(){q===w&&(r(),g.$emit("$includeContentError"))}),g.$emit("$includeContentRequested")):(r(),u.template=null)})}}}}],ee=["$compile",function(a){return{restrict:"ECA",priority:-400,require:"ngInclude",link:function(c,
d,e,f){d.html(f.template);a(d.contents())(c)}}}],Pd=wa({priority:450,compile:function(){return{pre:function(a,c,d){a.$eval(d.ngInit)}}}}),Qd=wa({terminal:!0,priority:1E3}),Rd=["$locale","$interpolate",function(a,c){var d=/{}/g;return{restrict:"EA",link:function(e,f,h){var g=h.count,m=h.$attr.when&&f.attr(h.$attr.when),l=h.offset||0,n=e.$eval(m)||{},p={},k=c.startSymbol(),t=c.endSymbol(),u=/^when(Minus)?(.+)$/;q(h,function(a,c){u.test(c)&&(n[O(c.replace("when","").replace("Minus","-"))]=f.attr(h.$attr[c]))});
q(n,function(a,e){p[e]=c(a.replace(d,k+g+"-"+l+t))});e.$watch(function(){var c=parseFloat(e.$eval(g));if(isNaN(c))return"";c in n||(c=a.pluralCat(c-l));return p[c](e)},function(a){f.text(a)})}}}],Sd=["$parse","$animate",function(a,c){var d=S("ngRepeat");return{restrict:"A",multiElement:!0,transclude:"element",priority:1E3,terminal:!0,$$tlb:!0,link:function(e,f,h,g,m){var l=h.ngRepeat,n=l.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+track\s+by\s+([\s\S]+?))?\s*$/),p,k,t,u,D,
w,y,v={$id:Fa};if(!n)throw d("iexp",l);h=n[1];g=n[2];k=n[3];(n=n[4])?(p=a(n),t=function(a,c,d){y&&(v[y]=a);v[w]=c;v.$index=d;return p(e,v)}):(u=function(a,c){return Fa(c)},D=function(a){return a});n=h.match(/^(?:([\$\w]+)|\(([\$\w]+)\s*,\s*([\$\w]+)\))$/);if(!n)throw d("iidexp",h);w=n[3]||n[1];y=n[2];var x={};e.$watchCollection(g,function(a){var g,h,n=f[0],p,v={},z,s,C,A,H,G,F,M=[];k&&(e[k]=a);var L=function(a,c){a[w]=C;y&&(a[y]=s);a.$index=c;a.$first=0===c;a.$last=c===z-1;a.$middle=!(a.$first||a.$last);
a.$odd=!(a.$even=0===(c&1))};if(eb(a))G=a,H=t||u;else{H=t||D;G=[];for(h in a)a.hasOwnProperty(h)&&"$"!=h.charAt(0)&&G.push(h);G.sort()}z=G.length;h=M.length=G.length;for(g=0;g<h;g++)if(s=a===G?g:G[g],C=a[s],A=H(s,C,g),za(A,"`track by` id"),x.hasOwnProperty(A))F=x[A],delete x[A],v[A]=F,M[g]=F;else{if(v.hasOwnProperty(A))throw q(M,function(a){a&&a.scope&&(x[a.id]=a)}),d("dupes",l,A);M[g]={id:A};v[A]=!1}for(p in x)x.hasOwnProperty(p)&&(F=x[p],h=kb(F.clone),c.leave(h),q(h,function(a){a.$$NG_REMOVED=!0}),
F.scope.$destroy());g=0;for(h=G.length;g<h;g++)if(s=a===G?g:G[g],C=a[s],F=M[g],M[g-1]&&(n=M[g-1].clone[M[g-1].clone.length-1]),F.scope){p=n;do p=p.nextSibling;while(p&&p.$$NG_REMOVED);F.clone[0]!=p&&c.move(kb(F.clone),null,B(n));n=F.clone[F.clone.length-1];L(F.scope,g)}else m(function(a,d){F.scope=d;a[a.length++]=V.createComment(" end ngRepeat: "+l+" ");c.enter(a,null,B(n));n=a;F.clone=a;v[F.id]=F;L(F.scope,g)});x=v})}}}],Td=["$animate",function(a){return{restrict:"A",multiElement:!0,link:function(c,
d,e){c.$watch(e.ngShow,function(c){a[c?"removeClass":"addClass"](d,"ng-hide")})}}}],Md=["$animate",function(a){return{restrict:"A",multiElement:!0,link:function(c,d,e){c.$watch(e.ngHide,function(c){a[c?"addClass":"removeClass"](d,"ng-hide")})}}}],Ud=wa(function(a,c,d){a.$watch(d.ngStyle,function(a,d){d&&a!==d&&q(d,function(a,d){c.css(d,"")});a&&c.css(a)},!0)}),Vd=["$animate",function(a){return{restrict:"EA",require:"ngSwitch",controller:["$scope",function(){this.cases={}}],link:function(c,d,e,f){var h=
[],g=[],m=[],l=[];c.$watch(e.ngSwitch||e.on,function(d){var p,k;p=0;for(k=m.length;p<k;++p)m[p].remove();p=m.length=0;for(k=l.length;p<k;++p){var t=kb(g[p].clone);l[p].$destroy();m[p]=t;a.leave(t,function(){m.splice(p,1)})}g.length=0;l.length=0;if(h=f.cases["!"+d]||f.cases["?"])c.$eval(e.change),q(h,function(c){c.transclude(function(d,e){l.push(e);var f=c.element;d[d.length++]=V.createComment(" end ngSwitchWhen: ");g.push({clone:d});a.enter(d,f.parent(),f)})})})}}}],Wd=wa({transclude:"element",priority:1200,
require:"^ngSwitch",multiElement:!0,link:function(a,c,d,e,f){e.cases["!"+d.ngSwitchWhen]=e.cases["!"+d.ngSwitchWhen]||[];e.cases["!"+d.ngSwitchWhen].push({transclude:f,element:c})}}),Xd=wa({transclude:"element",priority:1200,require:"^ngSwitch",multiElement:!0,link:function(a,c,d,e,f){e.cases["?"]=e.cases["?"]||[];e.cases["?"].push({transclude:f,element:c})}}),Zd=wa({restrict:"EAC",link:function(a,c,d,e,f){if(!f)throw S("ngTransclude")("orphan",ia(c));f(function(a){c.empty();c.append(a)})}}),zd=["$templateCache",
function(a){return{restrict:"E",terminal:!0,compile:function(c,d){"text/ng-template"==d.type&&a.put(d.id,c[0].text)}}}],vf=S("ngOptions"),Yd=ba({restrict:"A",terminal:!0}),Ad=["$compile","$parse",function(a,c){var d=/^\s*([\s\S]+?)(?:\s+as\s+([\s\S]+?))?(?:\s+group\s+by\s+([\s\S]+?))?\s+for\s+(?:([\$\w][\$\w]*)|(?:\(\s*([\$\w][\$\w]*)\s*,\s*([\$\w][\$\w]*)\s*\)))\s+in\s+([\s\S]+?)(?:\s+track\s+by\s+([\s\S]+?))?$/,e={$setViewValue:A};return{restrict:"E",require:["select","?ngModel"],controller:["$element",
"$scope","$attrs",function(a,c,d){var m=this,l={},n=e,p;m.databound=d.ngModel;m.init=function(a,c,d){n=a;p=d};m.addOption=function(c,d){za(c,'"option value"');l[c]=!0;n.$viewValue==c&&(a.val(c),p.parent()&&p.remove());d[0].hasAttribute("selected")&&(d[0].selected=!0)};m.removeOption=function(a){this.hasOption(a)&&(delete l[a],n.$viewValue==a&&this.renderUnknownOption(a))};m.renderUnknownOption=function(c){c="? "+Fa(c)+" ?";p.val(c);a.prepend(p);a.val(c);p.prop("selected",!0)};m.hasOption=function(a){return l.hasOwnProperty(a)};
c.$on("$destroy",function(){m.renderUnknownOption=A})}],link:function(e,h,g,m){function l(a,c,d,e){d.$render=function(){var a=d.$viewValue;e.hasOption(a)?(x.parent()&&x.remove(),c.val(a),""===a&&w.prop("selected",!0)):F(a)&&w?c.val(""):e.renderUnknownOption(a)};c.on("change",function(){a.$apply(function(){x.parent()&&x.remove();d.$setViewValue(c.val())})})}function n(a,c,d){var e;d.$render=function(){var a=new Ya(d.$viewValue);q(c.find("option"),function(c){c.selected=D(a.get(c.value))})};a.$watch(function(){ra(e,
d.$viewValue)||(e=ha(d.$viewValue),d.$render())});c.on("change",function(){a.$apply(function(){var a=[];q(c.find("option"),function(c){c.selected&&a.push(c.value)});d.$setViewValue(a)})})}function p(e,f,g){function h(){var a={"":[]},c=[""],d,k,s,u,A;u=g.$modelValue;A=x(e)||[];var F=n?bc(A):A,G,z,B;z={};s=!1;var E,H;if(t)if(r&&L(u))for(s=new Ya([]),B=0;B<u.length;B++)z[m]=u[B],s.put(r(e,z),u[B]);else s=new Ya(u);for(B=0;G=F.length,B<G;B++){k=B;if(n){k=F[B];if("$"===k.charAt(0))continue;z[n]=k}z[m]=
A[k];d=p(e,z)||"";(k=a[d])||(k=a[d]=[],c.push(d));t?d=D(s.remove(r?r(e,z):q(e,z))):(r?(d={},d[m]=u,d=r(e,d)===r(e,z)):d=u===q(e,z),s=s||d);E=l(e,z);E=D(E)?E:"";k.push({id:r?r(e,z):n?F[B]:B,label:E,selected:d})}t||(C||null===u?a[""].unshift({id:"",label:"",selected:!s}):s||a[""].unshift({id:"?",label:"",selected:!0}));z=0;for(F=c.length;z<F;z++){d=c[z];k=a[d];w.length<=z?(u={element:v.clone().attr("label",d),label:k.label},A=[u],w.push(A),f.append(u.element)):(A=w[z],u=A[0],u.label!=d&&u.element.attr("label",
u.label=d));E=null;B=0;for(G=k.length;B<G;B++)s=k[B],(d=A[B+1])?(E=d.element,d.label!==s.label&&E.text(d.label=s.label),d.id!==s.id&&E.val(d.id=s.id),d.selected!==s.selected&&(E.prop("selected",d.selected=s.selected),T&&E.prop("selected",d.selected))):(""===s.id&&C?H=C:(H=y.clone()).val(s.id).prop("selected",s.selected).text(s.label),A.push({element:H,label:s.label,id:s.id,selected:s.selected}),E?E.after(H):u.element.append(H),E=H);for(B++;A.length>B;)A.pop().element.remove()}for(;w.length>z;)w.pop()[0].element.remove()}
var k;if(!(k=u.match(d)))throw vf("iexp",u,ia(f));var l=c(k[2]||k[1]),m=k[4]||k[6],n=k[5],p=c(k[3]||""),q=c(k[2]?k[1]:m),x=c(k[7]),r=k[8]?c(k[8]):null,w=[[{element:f,label:""}]];C&&(a(C)(e),C.removeClass("ng-scope"),C.remove());f.empty();f.on("change",function(){e.$apply(function(){var a,c=x(e)||[],d={},h,k,l,p,u,y,v;if(t)for(k=[],p=0,y=w.length;p<y;p++)for(a=w[p],l=1,u=a.length;l<u;l++){if((h=a[l].element)[0].selected){h=h.val();n&&(d[n]=h);if(r)for(v=0;v<c.length&&(d[m]=c[v],r(e,d)!=h);v++);else d[m]=
c[h];k.push(q(e,d))}}else{h=f.val();if("?"==h)k=s;else if(""===h)k=null;else if(r)for(v=0;v<c.length;v++){if(d[m]=c[v],r(e,d)==h){k=q(e,d);break}}else d[m]=c[h],n&&(d[n]=h),k=q(e,d);1<w[0].length&&w[0][1].id!==h&&(w[0][1].selected=!1)}g.$setViewValue(k)})});g.$render=h;e.$watch(h)}if(m[1]){var k=m[0];m=m[1];var t=g.multiple,u=g.ngOptions,C=!1,w,y=B(V.createElement("option")),v=B(V.createElement("optgroup")),x=y.clone();g=0;for(var r=h.children(),A=r.length;g<A;g++)if(""===r[g].value){w=C=r.eq(g);
break}k.init(m,C,x);t&&(m.$isEmpty=function(a){return!a||0===a.length});u?p(e,h,m):t?n(e,h,m):l(e,h,m,k)}}}}],Cd=["$interpolate",function(a){var c={addOption:A,removeOption:A};return{restrict:"E",priority:100,compile:function(d,e){if(F(e.value)){var f=a(d.text(),!0);f||e.$set("value",d.text())}return function(a,d,e){var l=d.parent(),n=l.data("$selectController")||l.parent().data("$selectController");n&&n.databound?d.prop("selected",!1):n=c;f?a.$watch(f,function(a,c){e.$set("value",a);c!==a&&n.removeOption(c);
n.addOption(a,d)}):n.addOption(e.value,d);d.on("$destroy",function(){n.removeOption(e.value)})}}}}],Bd=ba({restrict:"E",terminal:!1});P.angular.bootstrap?console.log("WARNING: Tried to load angular more than once."):(rd(),td(Ra),B(V).ready(function(){pd(V,ic)}))})(window,document);!window.angular.$$csp()&&window.angular.element(document).find("head").prepend('<style type="text/css">@charset "UTF-8";[ng\\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-animate){display:none !important;}ng\\:form{display:block;}</style>');
//# sourceMappingURL=angular.min.js.map

angular.module('angularSlideables', [])
.directive('slideable', function () {
    return {
        restrict:'C',
        compile: function (element, attr) {
            // wrap tag
            var contents = element.html();
            element.html('<div class="slideable_content" style="margin:0 !important; padding:0 !important" >' + contents + '</div>');

            return function postLink(scope, element, attrs) {
                // default properties
                attrs.duration = (!attrs.duration) ? '1s' : attrs.duration;
                attrs.easing = (!attrs.easing) ? 'ease-in-out' : attrs.easing;
                element.css({
                    'overflow': 'hidden',
                    'height': '0px',
                    'transitionProperty': 'height',
                    'transitionDuration': attrs.duration,
                    'transitionTimingFunction': attrs.easing
                });
            };
        }
    };
})
.directive('slideToggle', function() {
    return {
        restrict: 'A',
        link: function(scope, element, attrs) {
            var target, content;
            
            attrs.expanded = false;
            
            element.bind('click', function() {
                if (!target) target = document.querySelector(attrs.slideToggle);
                if (!content) content = target.querySelector('.slideable_content');
                
                if(!attrs.expanded) {
                    content.style.border = '1px solid rgba(0,0,0,0)';
                    var y = content.clientHeight;
                    content.style.border = 0;
                    target.style.height = y + 'px';
                } else {
                    target.style.height = '0px';
                }
                attrs.expanded = !attrs.expanded;
            });
        }
    }
});

//     Underscore.js 1.6.0
//     http://underscorejs.org
//     (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.

(function() {

  // Baseline setup
  // --------------

  // Establish the root object, `window` in the browser, or `exports` on the server.
  var root = this;

  // Save the previous value of the `_` variable.
  var previousUnderscore = root._;

  // Establish the object that gets returned to break out of a loop iteration.
  var breaker = {};

  // Save bytes in the minified (but not gzipped) version:
  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;

  // Create quick reference variables for speed access to core prototypes.
  var
    push             = ArrayProto.push,
    slice            = ArrayProto.slice,
    concat           = ArrayProto.concat,
    toString         = ObjProto.toString,
    hasOwnProperty   = ObjProto.hasOwnProperty;

  // All **ECMAScript 5** native function implementations that we hope to use
  // are declared here.
  var
    nativeForEach      = ArrayProto.forEach,
    nativeMap          = ArrayProto.map,
    nativeReduce       = ArrayProto.reduce,
    nativeReduceRight  = ArrayProto.reduceRight,
    nativeFilter       = ArrayProto.filter,
    nativeEvery        = ArrayProto.every,
    nativeSome         = ArrayProto.some,
    nativeIndexOf      = ArrayProto.indexOf,
    nativeLastIndexOf  = ArrayProto.lastIndexOf,
    nativeIsArray      = Array.isArray,
    nativeKeys         = Object.keys,
    nativeBind         = FuncProto.bind;

  // Create a safe reference to the Underscore object for use below.
  var _ = function(obj) {
    if (obj instanceof _) return obj;
    if (!(this instanceof _)) return new _(obj);
    this._wrapped = obj;
  };

  // Export the Underscore object for **Node.js**, with
  // backwards-compatibility for the old `require()` API. If we're in
  // the browser, add `_` as a global object via a string identifier,
  // for Closure Compiler "advanced" mode.
  if (typeof exports !== 'undefined') {
    if (typeof module !== 'undefined' && module.exports) {
      exports = module.exports = _;
    }
    exports._ = _;
  } else {
    root._ = _;
  }

  // Current version.
  _.VERSION = '1.6.0';

  // Collection Functions
  // --------------------

  // The cornerstone, an `each` implementation, aka `forEach`.
  // Handles objects with the built-in `forEach`, arrays, and raw objects.
  // Delegates to **ECMAScript 5**'s native `forEach` if available.
  var each = _.each = _.forEach = function(obj, iterator, context) {
    if (obj == null) return obj;
    if (nativeForEach && obj.forEach === nativeForEach) {
      obj.forEach(iterator, context);
    } else if (obj.length === +obj.length) {
      for (var i = 0, length = obj.length; i < length; i++) {
        if (iterator.call(context, obj[i], i, obj) === breaker) return;
      }
    } else {
      var keys = _.keys(obj);
      for (var i = 0, length = keys.length; i < length; i++) {
        if (iterator.call(context, obj[keys[i]], keys[i], obj) === breaker) return;
      }
    }
    return obj;
  };

  // Return the results of applying the iterator to each element.
  // Delegates to **ECMAScript 5**'s native `map` if available.
  _.map = _.collect = function(obj, iterator, context) {
    var results = [];
    if (obj == null) return results;
    if (nativeMap && obj.map === nativeMap) return obj.map(iterator, context);
    each(obj, function(value, index, list) {
      results.push(iterator.call(context, value, index, list));
    });
    return results;
  };

  var reduceError = 'Reduce of empty array with no initial value';

  // **Reduce** builds up a single result from a list of values, aka `inject`,
  // or `foldl`. Delegates to **ECMAScript 5**'s native `reduce` if available.
  _.reduce = _.foldl = _.inject = function(obj, iterator, memo, context) {
    var initial = arguments.length > 2;
    if (obj == null) obj = [];
    if (nativeReduce && obj.reduce === nativeReduce) {
      if (context) iterator = _.bind(iterator, context);
      return initial ? obj.reduce(iterator, memo) : obj.reduce(iterator);
    }
    each(obj, function(value, index, list) {
      if (!initial) {
        memo = value;
        initial = true;
      } else {
        memo = iterator.call(context, memo, value, index, list);
      }
    });
    if (!initial) throw new TypeError(reduceError);
    return memo;
  };

  // The right-associative version of reduce, also known as `foldr`.
  // Delegates to **ECMAScript 5**'s native `reduceRight` if available.
  _.reduceRight = _.foldr = function(obj, iterator, memo, context) {
    var initial = arguments.length > 2;
    if (obj == null) obj = [];
    if (nativeReduceRight && obj.reduceRight === nativeReduceRight) {
      if (context) iterator = _.bind(iterator, context);
      return initial ? obj.reduceRight(iterator, memo) : obj.reduceRight(iterator);
    }
    var length = obj.length;
    if (length !== +length) {
      var keys = _.keys(obj);
      length = keys.length;
    }
    each(obj, function(value, index, list) {
      index = keys ? keys[--length] : --length;
      if (!initial) {
        memo = obj[index];
        initial = true;
      } else {
        memo = iterator.call(context, memo, obj[index], index, list);
      }
    });
    if (!initial) throw new TypeError(reduceError);
    return memo;
  };

  // Return the first value which passes a truth test. Aliased as `detect`.
  _.find = _.detect = function(obj, predicate, context) {
    var result;
    any(obj, function(value, index, list) {
      if (predicate.call(context, value, index, list)) {
        result = value;
        return true;
      }
    });
    return result;
  };

  // Return all the elements that pass a truth test.
  // Delegates to **ECMAScript 5**'s native `filter` if available.
  // Aliased as `select`.
  _.filter = _.select = function(obj, predicate, context) {
    var results = [];
    if (obj == null) return results;
    if (nativeFilter && obj.filter === nativeFilter) return obj.filter(predicate, context);
    each(obj, function(value, index, list) {
      if (predicate.call(context, value, index, list)) results.push(value);
    });
    return results;
  };

  // Return all the elements for which a truth test fails.
  _.reject = function(obj, predicate, context) {
    return _.filter(obj, function(value, index, list) {
      return !predicate.call(context, value, index, list);
    }, context);
  };

  // Determine whether all of the elements match a truth test.
  // Delegates to **ECMAScript 5**'s native `every` if available.
  // Aliased as `all`.
  _.every = _.all = function(obj, predicate, context) {
    predicate || (predicate = _.identity);
    var result = true;
    if (obj == null) return result;
    if (nativeEvery && obj.every === nativeEvery) return obj.every(predicate, context);
    each(obj, function(value, index, list) {
      if (!(result = result && predicate.call(context, value, index, list))) return breaker;
    });
    return !!result;
  };

  // Determine if at least one element in the object matches a truth test.
  // Delegates to **ECMAScript 5**'s native `some` if available.
  // Aliased as `any`.
  var any = _.some = _.any = function(obj, predicate, context) {
    predicate || (predicate = _.identity);
    var result = false;
    if (obj == null) return result;
    if (nativeSome && obj.some === nativeSome) return obj.some(predicate, context);
    each(obj, function(value, index, list) {
      if (result || (result = predicate.call(context, value, index, list))) return breaker;
    });
    return !!result;
  };

  // Determine if the array or object contains a given value (using `===`).
  // Aliased as `include`.
  _.contains = _.include = function(obj, target) {
    if (obj == null) return false;
    if (nativeIndexOf && obj.indexOf === nativeIndexOf) return obj.indexOf(target) != -1;
    return any(obj, function(value) {
      return value === target;
    });
  };

  // Invoke a method (with arguments) on every item in a collection.
  _.invoke = function(obj, method) {
    var args = slice.call(arguments, 2);
    var isFunc = _.isFunction(method);
    return _.map(obj, function(value) {
      return (isFunc ? method : value[method]).apply(value, args);
    });
  };

  // Convenience version of a common use case of `map`: fetching a property.
  _.pluck = function(obj, key) {
    return _.map(obj, _.property(key));
  };

  // Convenience version of a common use case of `filter`: selecting only objects
  // containing specific `key:value` pairs.
  _.where = function(obj, attrs) {
    return _.filter(obj, _.matches(attrs));
  };

  // Convenience version of a common use case of `find`: getting the first object
  // containing specific `key:value` pairs.
  _.findWhere = function(obj, attrs) {
    return _.find(obj, _.matches(attrs));
  };

  // Return the maximum element or (element-based computation).
  // Can't optimize arrays of integers longer than 65,535 elements.
  // See [WebKit Bug 80797](https://bugs.webkit.org/show_bug.cgi?id=80797)
  _.max = function(obj, iterator, context) {
    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {
      return Math.max.apply(Math, obj);
    }
    var result = -Infinity, lastComputed = -Infinity;
    each(obj, function(value, index, list) {
      var computed = iterator ? iterator.call(context, value, index, list) : value;
      if (computed > lastComputed) {
        result = value;
        lastComputed = computed;
      }
    });
    return result;
  };

  // Return the minimum element (or element-based computation).
  _.min = function(obj, iterator, context) {
    if (!iterator && _.isArray(obj) && obj[0] === +obj[0] && obj.length < 65535) {
      return Math.min.apply(Math, obj);
    }
    var result = Infinity, lastComputed = Infinity;
    each(obj, function(value, index, list) {
      var computed = iterator ? iterator.call(context, value, index, list) : value;
      if (computed < lastComputed) {
        result = value;
        lastComputed = computed;
      }
    });
    return result;
  };

  // Shuffle an array, using the modern version of the
  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
  _.shuffle = function(obj) {
    var rand;
    var index = 0;
    var shuffled = [];
    each(obj, function(value) {
      rand = _.random(index++);
      shuffled[index - 1] = shuffled[rand];
      shuffled[rand] = value;
    });
    return shuffled;
  };

  // Sample **n** random values from a collection.
  // If **n** is not specified, returns a single random element.
  // The internal `guard` argument allows it to work with `map`.
  _.sample = function(obj, n, guard) {
    if (n == null || guard) {
      if (obj.length !== +obj.length) obj = _.values(obj);
      return obj[_.random(obj.length - 1)];
    }
    return _.shuffle(obj).slice(0, Math.max(0, n));
  };

  // An internal function to generate lookup iterators.
  var lookupIterator = function(value) {
    if (value == null) return _.identity;
    if (_.isFunction(value)) return value;
    return _.property(value);
  };

  // Sort the object's values by a criterion produced by an iterator.
  _.sortBy = function(obj, iterator, context) {
    iterator = lookupIterator(iterator);
    return _.pluck(_.map(obj, function(value, index, list) {
      return {
        value: value,
        index: index,
        criteria: iterator.call(context, value, index, list)
      };
    }).sort(function(left, right) {
      var a = left.criteria;
      var b = right.criteria;
      if (a !== b) {
        if (a > b || a === void 0) return 1;
        if (a < b || b === void 0) return -1;
      }
      return left.index - right.index;
    }), 'value');
  };

  // An internal function used for aggregate "group by" operations.
  var group = function(behavior) {
    return function(obj, iterator, context) {
      var result = {};
      iterator = lookupIterator(iterator);
      each(obj, function(value, index) {
        var key = iterator.call(context, value, index, obj);
        behavior(result, key, value);
      });
      return result;
    };
  };

  // Groups the object's values by a criterion. Pass either a string attribute
  // to group by, or a function that returns the criterion.
  _.groupBy = group(function(result, key, value) {
    _.has(result, key) ? result[key].push(value) : result[key] = [value];
  });

  // Indexes the object's values by a criterion, similar to `groupBy`, but for
  // when you know that your index values will be unique.
  _.indexBy = group(function(result, key, value) {
    result[key] = value;
  });

  // Counts instances of an object that group by a certain criterion. Pass
  // either a string attribute to count by, or a function that returns the
  // criterion.
  _.countBy = group(function(result, key) {
    _.has(result, key) ? result[key]++ : result[key] = 1;
  });

  // Use a comparator function to figure out the smallest index at which
  // an object should be inserted so as to maintain order. Uses binary search.
  _.sortedIndex = function(array, obj, iterator, context) {
    iterator = lookupIterator(iterator);
    var value = iterator.call(context, obj);
    var low = 0, high = array.length;
    while (low < high) {
      var mid = (low + high) >>> 1;
      iterator.call(context, array[mid]) < value ? low = mid + 1 : high = mid;
    }
    return low;
  };

  // Safely create a real, live array from anything iterable.
  _.toArray = function(obj) {
    if (!obj) return [];
    if (_.isArray(obj)) return slice.call(obj);
    if (obj.length === +obj.length) return _.map(obj, _.identity);
    return _.values(obj);
  };

  // Return the number of elements in an object.
  _.size = function(obj) {
    if (obj == null) return 0;
    return (obj.length === +obj.length) ? obj.length : _.keys(obj).length;
  };

  // Array Functions
  // ---------------

  // Get the first element of an array. Passing **n** will return the first N
  // values in the array. Aliased as `head` and `take`. The **guard** check
  // allows it to work with `_.map`.
  _.first = _.head = _.take = function(array, n, guard) {
    if (array == null) return void 0;
    if ((n == null) || guard) return array[0];
    if (n < 0) return [];
    return slice.call(array, 0, n);
  };

  // Returns everything but the last entry of the array. Especially useful on
  // the arguments object. Passing **n** will return all the values in
  // the array, excluding the last N. The **guard** check allows it to work with
  // `_.map`.
  _.initial = function(array, n, guard) {
    return slice.call(array, 0, array.length - ((n == null) || guard ? 1 : n));
  };

  // Get the last element of an array. Passing **n** will return the last N
  // values in the array. The **guard** check allows it to work with `_.map`.
  _.last = function(array, n, guard) {
    if (array == null) return void 0;
    if ((n == null) || guard) return array[array.length - 1];
    return slice.call(array, Math.max(array.length - n, 0));
  };

  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
  // Especially useful on the arguments object. Passing an **n** will return
  // the rest N values in the array. The **guard**
  // check allows it to work with `_.map`.
  _.rest = _.tail = _.drop = function(array, n, guard) {
    return slice.call(array, (n == null) || guard ? 1 : n);
  };

  // Trim out all falsy values from an array.
  _.compact = function(array) {
    return _.filter(array, _.identity);
  };

  // Internal implementation of a recursive `flatten` function.
  var flatten = function(input, shallow, output) {
    if (shallow && _.every(input, _.isArray)) {
      return concat.apply(output, input);
    }
    each(input, function(value) {
      if (_.isArray(value) || _.isArguments(value)) {
        shallow ? push.apply(output, value) : flatten(value, shallow, output);
      } else {
        output.push(value);
      }
    });
    return output;
  };

  // Flatten out an array, either recursively (by default), or just one level.
  _.flatten = function(array, shallow) {
    return flatten(array, shallow, []);
  };

  // Return a version of the array that does not contain the specified value(s).
  _.without = function(array) {
    return _.difference(array, slice.call(arguments, 1));
  };

  // Split an array into two arrays: one whose elements all satisfy the given
  // predicate, and one whose elements all do not satisfy the predicate.
  _.partition = function(array, predicate) {
    var pass = [], fail = [];
    each(array, function(elem) {
      (predicate(elem) ? pass : fail).push(elem);
    });
    return [pass, fail];
  };

  // Produce a duplicate-free version of the array. If the array has already
  // been sorted, you have the option of using a faster algorithm.
  // Aliased as `unique`.
  _.uniq = _.unique = function(array, isSorted, iterator, context) {
    if (_.isFunction(isSorted)) {
      context = iterator;
      iterator = isSorted;
      isSorted = false;
    }
    var initial = iterator ? _.map(array, iterator, context) : array;
    var results = [];
    var seen = [];
    each(initial, function(value, index) {
      if (isSorted ? (!index || seen[seen.length - 1] !== value) : !_.contains(seen, value)) {
        seen.push(value);
        results.push(array[index]);
      }
    });
    return results;
  };

  // Produce an array that contains the union: each distinct element from all of
  // the passed-in arrays.
  _.union = function() {
    return _.uniq(_.flatten(arguments, true));
  };

  // Produce an array that contains every item shared between all the
  // passed-in arrays.
  _.intersection = function(array) {
    var rest = slice.call(arguments, 1);
    return _.filter(_.uniq(array), function(item) {
      return _.every(rest, function(other) {
        return _.contains(other, item);
      });
    });
  };

  // Take the difference between one array and a number of other arrays.
  // Only the elements present in just the first array will remain.
  _.difference = function(array) {
    var rest = concat.apply(ArrayProto, slice.call(arguments, 1));
    return _.filter(array, function(value){ return !_.contains(rest, value); });
  };

  // Zip together multiple lists into a single array -- elements that share
  // an index go together.
  _.zip = function() {
    var length = _.max(_.pluck(arguments, 'length').concat(0));
    var results = new Array(length);
    for (var i = 0; i < length; i++) {
      results[i] = _.pluck(arguments, '' + i);
    }
    return results;
  };

  // Converts lists into objects. Pass either a single array of `[key, value]`
  // pairs, or two parallel arrays of the same length -- one of keys, and one of
  // the corresponding values.
  _.object = function(list, values) {
    if (list == null) return {};
    var result = {};
    for (var i = 0, length = list.length; i < length; i++) {
      if (values) {
        result[list[i]] = values[i];
      } else {
        result[list[i][0]] = list[i][1];
      }
    }
    return result;
  };

  // If the browser doesn't supply us with indexOf (I'm looking at you, **MSIE**),
  // we need this function. Return the position of the first occurrence of an
  // item in an array, or -1 if the item is not included in the array.
  // Delegates to **ECMAScript 5**'s native `indexOf` if available.
  // If the array is large and already in sort order, pass `true`
  // for **isSorted** to use binary search.
  _.indexOf = function(array, item, isSorted) {
    if (array == null) return -1;
    var i = 0, length = array.length;
    if (isSorted) {
      if (typeof isSorted == 'number') {
        i = (isSorted < 0 ? Math.max(0, length + isSorted) : isSorted);
      } else {
        i = _.sortedIndex(array, item);
        return array[i] === item ? i : -1;
      }
    }
    if (nativeIndexOf && array.indexOf === nativeIndexOf) return array.indexOf(item, isSorted);
    for (; i < length; i++) if (array[i] === item) return i;
    return -1;
  };

  // Delegates to **ECMAScript 5**'s native `lastIndexOf` if available.
  _.lastIndexOf = function(array, item, from) {
    if (array == null) return -1;
    var hasIndex = from != null;
    if (nativeLastIndexOf && array.lastIndexOf === nativeLastIndexOf) {
      return hasIndex ? array.lastIndexOf(item, from) : array.lastIndexOf(item);
    }
    var i = (hasIndex ? from : array.length);
    while (i--) if (array[i] === item) return i;
    return -1;
  };

  // Generate an integer Array containing an arithmetic progression. A port of
  // the native Python `range()` function. See
  // [the Python documentation](http://docs.python.org/library/functions.html#range).
  _.range = function(start, stop, step) {
    if (arguments.length <= 1) {
      stop = start || 0;
      start = 0;
    }
    step = arguments[2] || 1;

    var length = Math.max(Math.ceil((stop - start) / step), 0);
    var idx = 0;
    var range = new Array(length);

    while(idx < length) {
      range[idx++] = start;
      start += step;
    }

    return range;
  };

  // Function (ahem) Functions
  // ------------------

  // Reusable constructor function for prototype setting.
  var ctor = function(){};

  // Create a function bound to a given object (assigning `this`, and arguments,
  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
  // available.
  _.bind = function(func, context) {
    var args, bound;
    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
    if (!_.isFunction(func)) throw new TypeError;
    args = slice.call(arguments, 2);
    return bound = function() {
      if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));
      ctor.prototype = func.prototype;
      var self = new ctor;
      ctor.prototype = null;
      var result = func.apply(self, args.concat(slice.call(arguments)));
      if (Object(result) === result) return result;
      return self;
    };
  };

  // Partially apply a function by creating a version that has had some of its
  // arguments pre-filled, without changing its dynamic `this` context. _ acts
  // as a placeholder, allowing any combination of arguments to be pre-filled.
  _.partial = function(func) {
    var boundArgs = slice.call(arguments, 1);
    return function() {
      var position = 0;
      var args = boundArgs.slice();
      for (var i = 0, length = args.length; i < length; i++) {
        if (args[i] === _) args[i] = arguments[position++];
      }
      while (position < arguments.length) args.push(arguments[position++]);
      return func.apply(this, args);
    };
  };

  // Bind a number of an object's methods to that object. Remaining arguments
  // are the method names to be bound. Useful for ensuring that all callbacks
  // defined on an object belong to it.
  _.bindAll = function(obj) {
    var funcs = slice.call(arguments, 1);
    if (funcs.length === 0) throw new Error('bindAll must be passed function names');
    each(funcs, function(f) { obj[f] = _.bind(obj[f], obj); });
    return obj;
  };

  // Memoize an expensive function by storing its results.
  _.memoize = function(func, hasher) {
    var memo = {};
    hasher || (hasher = _.identity);
    return function() {
      var key = hasher.apply(this, arguments);
      return _.has(memo, key) ? memo[key] : (memo[key] = func.apply(this, arguments));
    };
  };

  // Delays a function for the given number of milliseconds, and then calls
  // it with the arguments supplied.
  _.delay = function(func, wait) {
    var args = slice.call(arguments, 2);
    return setTimeout(function(){ return func.apply(null, args); }, wait);
  };

  // Defers a function, scheduling it to run after the current call stack has
  // cleared.
  _.defer = function(func) {
    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));
  };

  // Returns a function, that, when invoked, will only be triggered at most once
  // during a given window of time. Normally, the throttled function will run
  // as much as it can, without ever going more than once per `wait` duration;
  // but if you'd like to disable the execution on the leading edge, pass
  // `{leading: false}`. To disable execution on the trailing edge, ditto.
  _.throttle = function(func, wait, options) {
    var context, args, result;
    var timeout = null;
    var previous = 0;
    options || (options = {});
    var later = function() {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      context = args = null;
    };
    return function() {
      var now = _.now();
      if (!previous && options.leading === false) previous = now;
      var remaining = wait - (now - previous);
      context = this;
      args = arguments;
      if (remaining <= 0) {
        clearTimeout(timeout);
        timeout = null;
        previous = now;
        result = func.apply(context, args);
        context = args = null;
      } else if (!timeout && options.trailing !== false) {
        timeout = setTimeout(later, remaining);
      }
      return result;
    };
  };

  // Returns a function, that, as long as it continues to be invoked, will not
  // be triggered. The function will be called after it stops being called for
  // N milliseconds. If `immediate` is passed, trigger the function on the
  // leading edge, instead of the trailing.
  _.debounce = function(func, wait, immediate) {
    var timeout, args, context, timestamp, result;

    var later = function() {
      var last = _.now() - timestamp;
      if (last < wait) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          context = args = null;
        }
      }
    };

    return function() {
      context = this;
      args = arguments;
      timestamp = _.now();
      var callNow = immediate && !timeout;
      if (!timeout) {
        timeout = setTimeout(later, wait);
      }
      if (callNow) {
        result = func.apply(context, args);
        context = args = null;
      }

      return result;
    };
  };

  // Returns a function that will be executed at most one time, no matter how
  // often you call it. Useful for lazy initialization.
  _.once = function(func) {
    var ran = false, memo;
    return function() {
      if (ran) return memo;
      ran = true;
      memo = func.apply(this, arguments);
      func = null;
      return memo;
    };
  };

  // Returns the first function passed as an argument to the second,
  // allowing you to adjust arguments, run code before and after, and
  // conditionally execute the original function.
  _.wrap = function(func, wrapper) {
    return _.partial(wrapper, func);
  };

  // Returns a function that is the composition of a list of functions, each
  // consuming the return value of the function that follows.
  _.compose = function() {
    var funcs = arguments;
    return function() {
      var args = arguments;
      for (var i = funcs.length - 1; i >= 0; i--) {
        args = [funcs[i].apply(this, args)];
      }
      return args[0];
    };
  };

  // Returns a function that will only be executed after being called N times.
  _.after = function(times, func) {
    return function() {
      if (--times < 1) {
        return func.apply(this, arguments);
      }
    };
  };

  // Object Functions
  // ----------------

  // Retrieve the names of an object's properties.
  // Delegates to **ECMAScript 5**'s native `Object.keys`
  _.keys = function(obj) {
    if (!_.isObject(obj)) return [];
    if (nativeKeys) return nativeKeys(obj);
    var keys = [];
    for (var key in obj) if (_.has(obj, key)) keys.push(key);
    return keys;
  };

  // Retrieve the values of an object's properties.
  _.values = function(obj) {
    var keys = _.keys(obj);
    var length = keys.length;
    var values = new Array(length);
    for (var i = 0; i < length; i++) {
      values[i] = obj[keys[i]];
    }
    return values;
  };

  // Convert an object into a list of `[key, value]` pairs.
  _.pairs = function(obj) {
    var keys = _.keys(obj);
    var length = keys.length;
    var pairs = new Array(length);
    for (var i = 0; i < length; i++) {
      pairs[i] = [keys[i], obj[keys[i]]];
    }
    return pairs;
  };

  // Invert the keys and values of an object. The values must be serializable.
  _.invert = function(obj) {
    var result = {};
    var keys = _.keys(obj);
    for (var i = 0, length = keys.length; i < length; i++) {
      result[obj[keys[i]]] = keys[i];
    }
    return result;
  };

  // Return a sorted list of the function names available on the object.
  // Aliased as `methods`
  _.functions = _.methods = function(obj) {
    var names = [];
    for (var key in obj) {
      if (_.isFunction(obj[key])) names.push(key);
    }
    return names.sort();
  };

  // Extend a given object with all the properties in passed-in object(s).
  _.extend = function(obj) {
    each(slice.call(arguments, 1), function(source) {
      if (source) {
        for (var prop in source) {
          obj[prop] = source[prop];
        }
      }
    });
    return obj;
  };

  // Return a copy of the object only containing the whitelisted properties.
  _.pick = function(obj) {
    var copy = {};
    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));
    each(keys, function(key) {
      if (key in obj) copy[key] = obj[key];
    });
    return copy;
  };

   // Return a copy of the object without the blacklisted properties.
  _.omit = function(obj) {
    var copy = {};
    var keys = concat.apply(ArrayProto, slice.call(arguments, 1));
    for (var key in obj) {
      if (!_.contains(keys, key)) copy[key] = obj[key];
    }
    return copy;
  };

  // Fill in a given object with default properties.
  _.defaults = function(obj) {
    each(slice.call(arguments, 1), function(source) {
      if (source) {
        for (var prop in source) {
          if (obj[prop] === void 0) obj[prop] = source[prop];
        }
      }
    });
    return obj;
  };

  // Create a (shallow-cloned) duplicate of an object.
  _.clone = function(obj) {
    if (!_.isObject(obj)) return obj;
    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
  };

  // Invokes interceptor with the obj, and then returns obj.
  // The primary purpose of this method is to "tap into" a method chain, in
  // order to perform operations on intermediate results within the chain.
  _.tap = function(obj, interceptor) {
    interceptor(obj);
    return obj;
  };

  // Internal recursive comparison function for `isEqual`.
  var eq = function(a, b, aStack, bStack) {
    // Identical objects are equal. `0 === -0`, but they aren't identical.
    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
    if (a === b) return a !== 0 || 1 / a == 1 / b;
    // A strict comparison is necessary because `null == undefined`.
    if (a == null || b == null) return a === b;
    // Unwrap any wrapped objects.
    if (a instanceof _) a = a._wrapped;
    if (b instanceof _) b = b._wrapped;
    // Compare `[[Class]]` names.
    var className = toString.call(a);
    if (className != toString.call(b)) return false;
    switch (className) {
      // Strings, numbers, dates, and booleans are compared by value.
      case '[object String]':
        // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
        // equivalent to `new String("5")`.
        return a == String(b);
      case '[object Number]':
        // `NaN`s are equivalent, but non-reflexive. An `egal` comparison is performed for
        // other numeric values.
        return a != +a ? b != +b : (a == 0 ? 1 / a == 1 / b : a == +b);
      case '[object Date]':
      case '[object Boolean]':
        // Coerce dates and booleans to numeric primitive values. Dates are compared by their
        // millisecond representations. Note that invalid dates with millisecond representations
        // of `NaN` are not equivalent.
        return +a == +b;
      // RegExps are compared by their source patterns and flags.
      case '[object RegExp]':
        return a.source == b.source &&
               a.global == b.global &&
               a.multiline == b.multiline &&
               a.ignoreCase == b.ignoreCase;
    }
    if (typeof a != 'object' || typeof b != 'object') return false;
    // Assume equality for cyclic structures. The algorithm for detecting cyclic
    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.
    var length = aStack.length;
    while (length--) {
      // Linear search. Performance is inversely proportional to the number of
      // unique nested structures.
      if (aStack[length] == a) return bStack[length] == b;
    }
    // Objects with different constructors are not equivalent, but `Object`s
    // from different frames are.
    var aCtor = a.constructor, bCtor = b.constructor;
    if (aCtor !== bCtor && !(_.isFunction(aCtor) && (aCtor instanceof aCtor) &&
                             _.isFunction(bCtor) && (bCtor instanceof bCtor))
                        && ('constructor' in a && 'constructor' in b)) {
      return false;
    }
    // Add the first object to the stack of traversed objects.
    aStack.push(a);
    bStack.push(b);
    var size = 0, result = true;
    // Recursively compare objects and arrays.
    if (className == '[object Array]') {
      // Compare array lengths to determine if a deep comparison is necessary.
      size = a.length;
      result = size == b.length;
      if (result) {
        // Deep compare the contents, ignoring non-numeric properties.
        while (size--) {
          if (!(result = eq(a[size], b[size], aStack, bStack))) break;
        }
      }
    } else {
      // Deep compare objects.
      for (var key in a) {
        if (_.has(a, key)) {
          // Count the expected number of properties.
          size++;
          // Deep compare each member.
          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;
        }
      }
      // Ensure that both objects contain the same number of properties.
      if (result) {
        for (key in b) {
          if (_.has(b, key) && !(size--)) break;
        }
        result = !size;
      }
    }
    // Remove the first object from the stack of traversed objects.
    aStack.pop();
    bStack.pop();
    return result;
  };

  // Perform a deep comparison to check if two objects are equal.
  _.isEqual = function(a, b) {
    return eq(a, b, [], []);
  };

  // Is a given array, string, or object empty?
  // An "empty" object has no enumerable own-properties.
  _.isEmpty = function(obj) {
    if (obj == null) return true;
    if (_.isArray(obj) || _.isString(obj)) return obj.length === 0;
    for (var key in obj) if (_.has(obj, key)) return false;
    return true;
  };

  // Is a given value a DOM element?
  _.isElement = function(obj) {
    return !!(obj && obj.nodeType === 1);
  };

  // Is a given value an array?
  // Delegates to ECMA5's native Array.isArray
  _.isArray = nativeIsArray || function(obj) {
    return toString.call(obj) == '[object Array]';
  };

  // Is a given variable an object?
  _.isObject = function(obj) {
    return obj === Object(obj);
  };

  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.
  each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {
    _['is' + name] = function(obj) {
      return toString.call(obj) == '[object ' + name + ']';
    };
  });

  // Define a fallback version of the method in browsers (ahem, IE), where
  // there isn't any inspectable "Arguments" type.
  if (!_.isArguments(arguments)) {
    _.isArguments = function(obj) {
      return !!(obj && _.has(obj, 'callee'));
    };
  }

  // Optimize `isFunction` if appropriate.
  if (typeof (/./) !== 'function') {
    _.isFunction = function(obj) {
      return typeof obj === 'function';
    };
  }

  // Is a given object a finite number?
  _.isFinite = function(obj) {
    return isFinite(obj) && !isNaN(parseFloat(obj));
  };

  // Is the given value `NaN`? (NaN is the only number which does not equal itself).
  _.isNaN = function(obj) {
    return _.isNumber(obj) && obj != +obj;
  };

  // Is a given value a boolean?
  _.isBoolean = function(obj) {
    return obj === true || obj === false || toString.call(obj) == '[object Boolean]';
  };

  // Is a given value equal to null?
  _.isNull = function(obj) {
    return obj === null;
  };

  // Is a given variable undefined?
  _.isUndefined = function(obj) {
    return obj === void 0;
  };

  // Shortcut function for checking if an object has a given property directly
  // on itself (in other words, not on a prototype).
  _.has = function(obj, key) {
    return hasOwnProperty.call(obj, key);
  };

  // Utility Functions
  // -----------------

  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
  // previous owner. Returns a reference to the Underscore object.
  _.noConflict = function() {
    root._ = previousUnderscore;
    return this;
  };

  // Keep the identity function around for default iterators.
  _.identity = function(value) {
    return value;
  };

  _.constant = function(value) {
    return function () {
      return value;
    };
  };

  _.property = function(key) {
    return function(obj) {
      return obj[key];
    };
  };

  // Returns a predicate for checking whether an object has a given set of `key:value` pairs.
  _.matches = function(attrs) {
    return function(obj) {
      if (obj === attrs) return true; //avoid comparing an object to itself.
      for (var key in attrs) {
        if (attrs[key] !== obj[key])
          return false;
      }
      return true;
    }
  };

  // Run a function **n** times.
  _.times = function(n, iterator, context) {
    var accum = Array(Math.max(0, n));
    for (var i = 0; i < n; i++) accum[i] = iterator.call(context, i);
    return accum;
  };

  // Return a random integer between min and max (inclusive).
  _.random = function(min, max) {
    if (max == null) {
      max = min;
      min = 0;
    }
    return min + Math.floor(Math.random() * (max - min + 1));
  };

  // A (possibly faster) way to get the current timestamp as an integer.
  _.now = Date.now || function() { return new Date().getTime(); };

  // List of HTML entities for escaping.
  var entityMap = {
    escape: {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#x27;'
    }
  };
  entityMap.unescape = _.invert(entityMap.escape);

  // Regexes containing the keys and values listed immediately above.
  var entityRegexes = {
    escape:   new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g'),
    unescape: new RegExp('(' + _.keys(entityMap.unescape).join('|') + ')', 'g')
  };

  // Functions for escaping and unescaping strings to/from HTML interpolation.
  _.each(['escape', 'unescape'], function(method) {
    _[method] = function(string) {
      if (string == null) return '';
      return ('' + string).replace(entityRegexes[method], function(match) {
        return entityMap[method][match];
      });
    };
  });

  // If the value of the named `property` is a function then invoke it with the
  // `object` as context; otherwise, return it.
  _.result = function(object, property) {
    if (object == null) return void 0;
    var value = object[property];
    return _.isFunction(value) ? value.call(object) : value;
  };

  // Add your own custom functions to the Underscore object.
  _.mixin = function(obj) {
    each(_.functions(obj), function(name) {
      var func = _[name] = obj[name];
      _.prototype[name] = function() {
        var args = [this._wrapped];
        push.apply(args, arguments);
        return result.call(this, func.apply(_, args));
      };
    });
  };

  // Generate a unique integer id (unique within the entire client session).
  // Useful for temporary DOM ids.
  var idCounter = 0;
  _.uniqueId = function(prefix) {
    var id = ++idCounter + '';
    return prefix ? prefix + id : id;
  };

  // By default, Underscore uses ERB-style template delimiters, change the
  // following template settings to use alternative delimiters.
  _.templateSettings = {
    evaluate    : /<%([\s\S]+?)%>/g,
    interpolate : /<%=([\s\S]+?)%>/g,
    escape      : /<%-([\s\S]+?)%>/g
  };

  // When customizing `templateSettings`, if you don't want to define an
  // interpolation, evaluation or escaping regex, we need one that is
  // guaranteed not to match.
  var noMatch = /(.)^/;

  // Certain characters need to be escaped so that they can be put into a
  // string literal.
  var escapes = {
    "'":      "'",
    '\\':     '\\',
    '\r':     'r',
    '\n':     'n',
    '\t':     't',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  var escaper = /\\|'|\r|\n|\t|\u2028|\u2029/g;

  // JavaScript micro-templating, similar to John Resig's implementation.
  // Underscore templating handles arbitrary delimiters, preserves whitespace,
  // and correctly escapes quotes within interpolated code.
  _.template = function(text, data, settings) {
    var render;
    settings = _.defaults({}, settings, _.templateSettings);

    // Combine delimiters into one regular expression via alternation.
    var matcher = new RegExp([
      (settings.escape || noMatch).source,
      (settings.interpolate || noMatch).source,
      (settings.evaluate || noMatch).source
    ].join('|') + '|$', 'g');

    // Compile the template source, escaping string literals appropriately.
    var index = 0;
    var source = "__p+='";
    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {
      source += text.slice(index, offset)
        .replace(escaper, function(match) { return '\\' + escapes[match]; });

      if (escape) {
        source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
      }
      if (interpolate) {
        source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
      }
      if (evaluate) {
        source += "';\n" + evaluate + "\n__p+='";
      }
      index = offset + match.length;
      return match;
    });
    source += "';\n";

    // If a variable is not specified, place data values in local scope.
    if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

    source = "var __t,__p='',__j=Array.prototype.join," +
      "print=function(){__p+=__j.call(arguments,'');};\n" +
      source + "return __p;\n";

    try {
      render = new Function(settings.variable || 'obj', '_', source);
    } catch (e) {
      e.source = source;
      throw e;
    }

    if (data) return render(data, _);
    var template = function(data) {
      return render.call(this, data, _);
    };

    // Provide the compiled function source as a convenience for precompilation.
    template.source = 'function(' + (settings.variable || 'obj') + '){\n' + source + '}';

    return template;
  };

  // Add a "chain" function, which will delegate to the wrapper.
  _.chain = function(obj) {
    return _(obj).chain();
  };

  // OOP
  // ---------------
  // If Underscore is called as a function, it returns a wrapped object that
  // can be used OO-style. This wrapper holds altered versions of all the
  // underscore functions. Wrapped objects may be chained.

  // Helper function to continue chaining intermediate results.
  var result = function(obj) {
    return this._chain ? _(obj).chain() : obj;
  };

  // Add all of the Underscore functions to the wrapper object.
  _.mixin(_);

  // Add all mutator Array functions to the wrapper.
  each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      var obj = this._wrapped;
      method.apply(obj, arguments);
      if ((name == 'shift' || name == 'splice') && obj.length === 0) delete obj[0];
      return result.call(this, obj);
    };
  });

  // Add all accessor Array functions to the wrapper.
  each(['concat', 'join', 'slice'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      return result.call(this, method.apply(this._wrapped, arguments));
    };
  });

  _.extend(_.prototype, {

    // Start chaining a wrapped Underscore object.
    chain: function() {
      this._chain = true;
      return this;
    },

    // Extracts the result from a wrapped and chained object.
    value: function() {
      return this._wrapped;
    }

  });

  // AMD registration happens at the end for compatibility with AMD loaders
  // that may not enforce next-turn semantics on modules. Even though general
  // practice for AMD registration is to be anonymous, underscore registers
  // as a named module because, like jQuery, it is a base library that is
  // popular enough to be bundled in a third party lib, but not be part of
  // an AMD load request. Those cases could generate an error when an
  // anonymous define() is called outside of a loader request.
  if (typeof define === 'function' && define.amd) {
    define('underscore', [], function() {
      return _;
    });
  }
}).call(this);

(function (angular, _) {
  var statusToSymbol = function (project) {
    switch (project.Status.toLowerCase()) {
      case 'r': return ':(';
      case 'y': return ':|';
      case 'g': return ':)';
      case 'done': return ':D';
      case 'unknown': return '?';
    }
  };

  angular.module('asanaProjectsViewer', ['angularSlideables'])
    .controller('ProjectsController',
    ['$scope', '$http', function ($scope, $http) {
      $http.get('/projects').success(function (projects) {
        var positionCounter = 1;

        $scope.projects = projects.map(function (p) {
          p.Symbol = statusToSymbol(p);
          p.Position = positionCounter;
          positionCounter++;
          return p;
        });
      });

      $scope.orderProp = "Position";

      $scope.drawerActive = false;
      $scope.toggleDrawer = function () {
        $scope.drawerActive = !$scope.drawerActive;
      };
    }])
    .controller('ProjectItemController',
    ['$scope', '$http', function ($scope, $http) {
      $scope.toggleDetails = function (project) {
        $scope.project.showDetails = !$scope.project.showDetails;

        if (!$scope.project.details) {
          $http.get('/projects/' + project.ID).success(function (details) {
            $scope.project.details = details;
          });
        }

        if (!$scope.project.tasks) {
          $http.get('/projects/' + project.ID + '/tasks').success(function (tasks) {
            $scope.project.tasks = tasks;

            $scope.project.taskContributors = _.chain(tasks)
              .filter(function (task) {
                return task.Assignee && task.Assignee.Name.length > 0;
              })
              .groupBy(function (task) {
                return task.Assignee.Name;
              })
              .map(function (taskGroup) {
                return {
                  Name: taskGroup[0].Assignee.Name,
                  TaskCount: taskGroup.length
                };
              })
              .sortBy(function (taskGroup) {
                // Reverse order sort by task length
                return -1 * taskGroup.TaskCount;
              })
              .value();
          });
        }

        // Who knows how this actually gets into scope...
        event.preventDefault();
        event.stopPropagation();
      };
    }])
    .filter('outputIfMatch', function () {
      return function (input, rxPattern, output) {
        var rx = new RegExp(rxPattern, "i");
        input = input || '';

        if (rx.test(input)) {
          return output;
        } else {
          return '';
        }
      };
    });

})(window.angular, window._);

//# sourceMappingURL=data:application/json;base64,